[{"path":[]},{"path":"https://r-spatialecology.github.io/shar/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://r-spatialecology.github.io/shar/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://r-spatialecology.github.io/shar/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://r-spatialecology.github.io/shar/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://r-spatialecology.github.io/shar/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement mhk.hesselbarth@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://r-spatialecology.github.io/shar/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://r-spatialecology.github.io/shar/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://r-spatialecology.github.io/shar/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://r-spatialecology.github.io/shar/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://r-spatialecology.github.io/shar/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://r-spatialecology.github.io/shar/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://r-spatialecology.github.io/shar/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to shar","title":"Contributing to shar","text":"outlines propose change shar. several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://r-spatialecology.github.io/shar/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to shar","text":"Please note shar project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/CONTRIBUTING.html","id":"ask-a-question-interrobang","dir":"","previous_headings":"How to contribute","what":"Ask a question ‚ÅâÔ∏è","title":"Contributing to shar","text":"Browse documentation see can find solution. Still stuck? Open issue GitHub GitHub. ‚Äôll try best address , questions often lead better documentation discovery bugs. Want ask question private? Contact package maintainer mhk.hesselbarth<>gmail.com. Please try include reproducible example using example reprex package.","code":""},{"path":"https://r-spatialecology.github.io/shar/CONTRIBUTING.html","id":"propose-an-idea-bulb","dir":"","previous_headings":"How to contribute","what":"Propose an idea üí°","title":"Contributing to shar","text":"Take look documentation issue GitHub list see isn‚Äôt included suggested yet. , please open new issue! can‚Äôt promise implement idea, helps : Explain detail work. Keep scope narrow possible.","code":""},{"path":"https://r-spatialecology.github.io/shar/CONTRIBUTING.html","id":"report-a-bug-bug","dir":"","previous_headings":"How to contribute","what":"Report a bug üêõ","title":"Contributing to shar","text":"Report issue GitHub can fix . good bug report makes easier us , please include: content utils::sessionInfo(). details local setup might helpful troubleshooting. Detailed steps reproduce bug , please try include reproducible example using example reprex package.","code":""},{"path":"https://r-spatialecology.github.io/shar/CONTRIBUTING.html","id":"improve-the-documentation-book","dir":"","previous_headings":"How to contribute","what":"Improve the documentation üìñ","title":"Contributing to shar","text":"Good documentation makes difference, help improve welcome! use roxygen2, Markdown syntax, documentation.","code":""},{"path":"https://r-spatialecology.github.io/shar/CONTRIBUTING.html","id":"pull-request-process-arrow_up_down","dir":"","previous_headings":"How to contribute","what":"Pull request process ‚ÜïÔ∏è","title":"Contributing to shar","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. Don‚Äôt forget pull new changes starting work! Open RStudio project file (.Rproj) install development dependencies (e.g., using devtools::install_dev_deps()). Make sure package passes R CMD check running devtools::check(). Create new Git branch use name briefly describes proposed changes. Make changes: Write code. Test code (bonus points adding unit tests using testthat package). Document code (see function documentation ). Check code devtools::check() aim 0 errors, warnings notes. Commit push changes. Submit pull request. New code follow tidyverse style guide.","code":""},{"path":"https://r-spatialecology.github.io/shar/CONTRIBUTING.html","id":"references","dir":"","previous_headings":"How to contribute","what":"References","title":"Contributing to shar","text":"CONTRIBUTING.md adapted .","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright ¬© 2007 Free Software Foundation, Inc.¬†<http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program‚Äìmake sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers‚Äô authors‚Äô protection, GPL clearly explains warranty free software. users‚Äô authors‚Äô sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users‚Äô freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"‚ÄúLicense‚Äù refers version 3 GNU General Public License. ‚ÄúCopyright‚Äù also means copyright-like laws apply kinds works, semiconductor masks. ‚ÄúProgram‚Äù refers copyrightable work licensed License. licensee addressed ‚Äú‚Äù. ‚ÄúLicensees‚Äù ‚Äúrecipients‚Äù may individuals organizations. ‚Äúmodify‚Äù work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called ‚Äúmodified version‚Äù earlier work work ‚Äúbased ‚Äù earlier work. ‚Äúcovered work‚Äù means either unmodified Program work based Program. ‚Äúpropagate‚Äù work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. ‚Äúconvey‚Äù work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays ‚ÄúAppropriate Legal Notices‚Äù extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"‚Äúsource code‚Äù work means preferred form work making modifications . ‚ÄúObject code‚Äù means non-source form work. ‚ÄúStandard Interface‚Äù means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. ‚ÄúSystem Libraries‚Äù executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. ‚ÄúMajor Component‚Äù, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . ‚ÄúCorresponding Source‚Äù work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work‚Äôs System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users‚Äô Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work‚Äôs users, third parties‚Äô legal rights forbid circumvention technological measures.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program‚Äôs source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 ‚Äúkeep intact notices‚Äù. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called ‚Äúaggregate‚Äù compilation resulting copyright used limit access legal rights compilation‚Äôs users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. ‚ÄúUser Product‚Äù either (1) ‚Äúconsumer product‚Äù, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, ‚Äúnormally used‚Äù refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. ‚ÄúInstallation Information‚Äù User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"‚ÄúAdditional permissions‚Äù terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered ‚Äúrestrictions‚Äù within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. ‚Äúentity transaction‚Äù transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party‚Äôs predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"‚Äúcontributor‚Äù copyright holder authorizes use License Program work Program based. work thus licensed called contributor‚Äôs ‚Äúcontributor version‚Äù. contributor‚Äôs ‚Äúessential patent claims‚Äù patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, ‚Äúcontrol‚Äù includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor‚Äôs essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, ‚Äúpatent license‚Äù express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). ‚Äúgrant‚Äù patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. ‚ÄúKnowingly relying‚Äù means actual knowledge , patent license, conveying covered work country, recipient‚Äôs use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license ‚Äúdiscriminatory‚Äù include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others‚Äô Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License ‚Äúlater version‚Äù applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy‚Äôs public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM ‚Äú‚Äù WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://r-spatialecology.github.io/shar/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least ‚Äúcopyright‚Äù line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program‚Äôs commands might different; GUI interface, use ‚Äúbox‚Äù. also get employer (work programmer) school, , sign ‚Äúcopyright disclaimer‚Äù program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://r-spatialecology.github.io/shar/articles/background.html","id":"randomize-environmental-data","dir":"Articles","previous_headings":"","what":"Randomize environmental data","title":"Background","text":"following two methods randomize environmental data, .e.¬†SpatRaster data, keeping point pattern data fixed.","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/background.html","id":"torus-translation-test","dir":"Articles","previous_headings":"Randomize environmental data","what":"Torus-translation-test","title":"Background","text":"torus-translation test (Harms et al.¬†2001) shifts habitat map four cardinal directions around torus. possible square rasters. use method shar use translate_raster().","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/background.html","id":"randomized-habitats-procedure","dir":"Articles","previous_headings":"Randomize environmental data","what":"Randomized-habitats procedure","title":"Background","text":"randomized-habitats procedure (Harms et al.¬†2001) also possible non-square raster randomizes habitats using random-walk algorithm. use method shar use randomize_raster().","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/background.html","id":"randomize-point-pattern-data","dir":"Articles","previous_headings":"","what":"Randomize point pattern data","title":"Background","text":"Contrastingly two methods described , following two methods randomize point pattern data, keeping environmental data fixed.","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/background.html","id":"gamma-test","dir":"Articles","previous_headings":"Randomize point pattern data","what":"Gamma-test","title":"Background","text":"gamma-test (Plotkin et al.¬†2000) randomizes data fitting point process model observed data simulation n random point patterns using fitted point process model. However, method works point patterns can described theoretical point process model. use method shar use fit_point_process().","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/background.html","id":"pattern-reconstruction","dir":"Articles","previous_headings":"Randomize point pattern data","what":"Pattern reconstruction","title":"Background","text":"Pattern reconstruction (Tscheschel & Stoyan 2006) randomizes point pattern using simulated annealing (Kirkpatrick et al.¬†1983). allows randomize also complex point patterns without theoretical point process model. use method shar use reconstruct_pattern().","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/background.html","id":"references","dir":"Articles","previous_headings":"Randomize point pattern data","what":"References","title":"Background","text":"Comita, L.S., Condit, R., Hubbell, S.P., 2007. Developmental changes habitat associations tropical trees. Journal Ecology 95, 482‚Äì492. https://doi.org/10.1111/j.1365-2745.2007.01229.x Garzon-Lopez, C.X., Jansen, P.., Bohlman, S.., Ordonez, ., Olff, H., 2014. Effects sampling scale patterns habitat association tropical trees. Journal Vegetation Science 25, 349‚Äì362. https://doi.org/10.1111/jvs.12090 Harms, K.E., Condit, R., Hubbell, S.P., Foster, R.B., 2001. Habitat associations trees shrubs 50-ha neotropical forest plot. Journal Ecology 89, 947‚Äì959. https://doi.org/10.1111/j.1365-2745.2001.00615.x Kirkpatrick, S., Gelatt, C.D.Jr., Vecchi, M.P., 1983. Optimization simulated annealing. Science 220, 671‚Äì680. https://doi.org/10.1126/science.220.4598.671 Plotkin, J.B., Potts, M.D., Leslie, N., Manokaran, N., LaFrankie, J.V., Ashton, P.S., 2000. Species-area curves, spatial aggregation, habitat specialization tropical forests. Journal Theoretical Biology 207, 81‚Äì99. https://doi.org/10.1006/jtbi.2000.2158 Tilman, D., Pacala, S.W., 1993. maintenance species richness plant communities, : Ricklefs, R.E., Schluter, D. (Eds.), Species Diversity Ecological Communities. University Chicago Press, Chicago, pp.¬†13‚Äì25. ISBN 978-0-226-71823-1 Tscheschel, ., Stoyan, D., 2006. Statistical reconstruction random point patterns. Computational Statistics Data Analysis 51, 859‚Äì871. https://doi.org/10.1016/j.csda.2005.09.007 Wiegand, T., Moloney, K.., 2014. Handbook spatial point-pattern analysis ecology. Chapman Hall/CRC Press, Boca Raton. ISBN 978-1-4200-8254-8","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/cormus_domestica_tmp.html","id":"outline","dir":"Articles","previous_headings":"","what":"Outline","title":"Analysing the climatic niche of Cormus domestica","text":"vignette demonstrates use shar analyse species occurrence data obtained Global Biodiversity Information Facility (GBIF) environmental raster data obtained Climate Research Unit (CRU) entirely R. ‚ÄúGamma test‚Äù approach detailed vignette(\"background\") used. distribution tree species Cormus domestica Europe selected, tree tolerates wide range conditions favors warm mild climates, occurring ‚ÄúSubtropical dry forest‚Äù ‚ÄúTemperate Continental‚Äù FAO ecological zones. Cormus domestica commonly found Southern Europe, though ‚Äôs natural range uncertain owing ‚Äôs cultivation distribution Roman Empire (De Rigo et al., 2016; Rotach, 2003).","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/cormus_domestica_tmp.html","id":"load-required-packages","dir":"Articles","previous_headings":"","what":"Load required packages","title":"Analysing the climatic niche of Cormus domestica","text":"article package requires getCRUCLdata package, available CRAN anymore. install package, please run install.packages('getCRUCLdata', repos = 'http://packages.ropensci.org', typ = 'source').","code":"library(dplyr) # For data wrangling library(getCRUCLdata) # For retrieving climate raster data library(ggplot2) # For plotting library(patchwork) # For composing multiple plots library(rgbif) # For retrieving species occurrence data library(rnaturalearth) # For retrieving geographical data library(rnaturalearthdata) # For retrieving geographical data library(sf) # For spatial data operations library(spatstat) # For spatial point pattern analysis library(terra) # For spatial data operations library(shar) # For species-habitat association analysis"},{"path":"https://r-spatialecology.github.io/shar/articles/cormus_domestica_tmp.html","id":"download-occurrence-data","dir":"Articles","previous_headings":"","what":"Download occurrence data","title":"Analysing the climatic niche of Cormus domestica","text":"retrieve species occurrence data R package rgbif (Chamberlain & Boettiger, 2017) used, provides interface access GBIF database. vignette interested observations within likely natural distribution Cormus domestica, includes Europe, wider Mediterranean, Black Sea Region, potentially North Africa.","code":"# Retrieve key for Cormus domestica key <- rgbif::name_backbone(name = 'Cormus domestica', kingdom = 'plants')  # Establish region of interest roi <- c(xmin = -20, xmax = 45, ymin = 30, ymax = 73) roi_bbox <- sf::st_bbox(roi, crs = sf::st_crs(\"EPSG:4326\")) roi_sfc <- sf::st_sfc(sf::st_point(c(roi[[\"xmin\"]], roi[[\"ymin\"]])),                        sf::st_point(c(roi[[\"xmax\"]], roi[[\"ymax\"]])),                        crs = \"EPSG:4326\")  # Retrieve occurrences for the region of interest res <- rgbif::occ_search(taxonKey = as.numeric(key$usageKey), limit = 99999,                           geometry = roi_bbox)  # Create a simple data frame containing only the unique identifier (id), # latitude (lat), and longtitude (lon). data_simp <- data.frame(id = res$data$key,                          lat = res$data$decimalLatitude, lon = res$data$decimalLongitude) %>%    dplyr::filter(!is.na(lat) | !is.na(lon))"},{"path":"https://r-spatialecology.github.io/shar/articles/cormus_domestica_tmp.html","id":"download-map-data","dir":"Articles","previous_headings":"","what":"Download map data","title":"Analysing the climatic niche of Cormus domestica","text":"Spatial polygon data world obtained rnaturalearth package (South, 2022), map restricted region interest. spatstat package requires geospatial data format projected coordinate system; data therefore converted geographic coordinate system 4336 projected coordinate system 3395. shar function fit_point_process requires spatial point pattern (ppp) object bounded within observation window class owin, created.","code":"# Retrieve data from rnaturalearth worldmap <- rnaturalearth::ne_countries(returnclass = \"sf\", scale = 50) %>%   sf::st_transform(crs = sf::st_crs(\"EPSG:3395\"))  # Re-project simple features region of interest roi_sfc_3395 <- roi_sfc %>%   sf::st_transform(crs = sf::st_crs(\"EPSG:3395\"))  # Crop world map to include polygons within the region of interest roi_map <- sf::st_crop(x = worldmap, y = roi_sfc_3395)  # Define observation window roi_owin <- spatstat.geom::as.owin(roi_map$geometry)"},{"path":"https://r-spatialecology.github.io/shar/articles/cormus_domestica_tmp.html","id":"download-climate-data","dir":"Articles","previous_headings":"","what":"Download climate data","title":"Analysing the climatic niche of Cormus domestica","text":"environmental variable selected demonstrative purposes mean temperature January 1961-1990 period. Data obtained getCRUCLdata package (Sparks, 2017) provides access datasets described New et al.¬†(2002).","code":"# Download data as a raster brick through the getCRUCLdata package # Mean temperature (tmn) data should be 180.4MB cru_data <- getCRUCLdata::get_CRU_stack(tmp = TRUE)  # Select temperature variable and the month of January tmp_raster <- cru_data$tmp$jan"},{"path":"https://r-spatialecology.github.io/shar/articles/cormus_domestica_tmp.html","id":"prepare-landscape-raster","dir":"Articles","previous_headings":"","what":"Prepare landscape raster","title":"Analysing the climatic niche of Cormus domestica","text":"climate data obtained restricted region interest, classified 10 habitats based temperature ranges, achieved setting lower upper bounds ranges fixedBreaks argument classify_habitats function. Figure 1 displays unclassified classified habitat. Figure 1 - mean temperature January 1961-1990 period continuous scale (left) classified ten discrete categories (right).","code":"# Crop tmp raster tmp_raster_eur <- terra::crop(x = tmp_raster, y = roi)  # Project raster to EPSG:3395 tmp_raster_eur_3395 <- terra::project(x = tmp_raster_eur, y = \"EPSG:3395\",                                        method = \"bilinear\")  # Classify landscape landscape_classified <- shar::classify_habitats(raster = tmp_raster_eur_3395,                                                 return_breaks = TRUE, style = \"fixed\",                                                 fixedBreaks = c(-20, -10, -7.5, -5, -2.5,                                                                  0, 2.5, 5, 7.5, 10, 20))"},{"path":"https://r-spatialecology.github.io/shar/articles/cormus_domestica_tmp.html","id":"prepare-occurrence-data","dir":"Articles","previous_headings":"","what":"Prepare occurrence data","title":"Analysing the climatic niche of Cormus domestica","text":"occurrence data prepared, shar function fit_point_process called, yielding randomized occurrence data within observation window required results_habitat_association function. Figure 2 displays real randomised occurrence data. Figure 2 - Real (left) randomised (right) occurrences Cormus domestica.","code":"# Convert occurrence data to a simple features object data_sf <- sf::st_as_sf(data_simp, coords = c(\"lon\", \"lat\"), crs = \"EPSG:4326\")  # Re-project the occurrence data data_sf_3395 <- data_sf %>%   sf::st_transform(crs = sf::st_crs(\"EPSG:3395\"))  # Extract the coordinates as a matrix from the sf occurrences object data_sf_coords <- sf::st_coordinates(data_sf_3395)  # Create a spatial points pattern object containing the occurrence data data_sf_ppp <- spatstat.geom::as.ppp(X = data_sf_coords, W = roi_owin)  # Fit point pattern process to data rand_pattern <- shar::fit_point_process(pattern = data_sf_ppp, n_random = 19)"},{"path":"https://r-spatialecology.github.io/shar/articles/cormus_domestica_tmp.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"Analysing the climatic niche of Cormus domestica","text":"analysis function results_habitat_association called. results analysis show Cormus domestica positively associated locations experience mean January temperature -2.5C - 10C (habitats 5, 6, 7, 8, 9). Furthermore, Cormus domestica negatively associated habitats classified temperature. Figure 3 - climatic niche Cormus domestica, defined positive association mean January temperature -2.5C - 10C visually inspecting Figure 3 can see occurrences Cormus domestica mostly restricted associated habitat defined mean January temperature -2.5C - 10C. However, Cormus domestica exist areas experiencing mean January temperature -2.5C - 10C, additionally number occurrences outside areas. next step assessing climatic niche Cormus domestica repeat analysis environmental variables, beyond scope minimal example.","code":"# Establish significance level sig_level <- 0.01  # Run analysis results <- shar::results_habitat_association(pattern = rand_pattern,                                               raster = landscape_classified$raster,                                              breaks = landscape_classified$breaks,                                              significance_level = sig_level) %>%    dplyr::arrange(habitat)  results #>    habitat     breaks count      lo      hi significance #> 1        1  [-20,-10)     1 8934.35 9181.20     negative #> 2        2 [-10,-7.5)     0 2886.07 3152.47     negative #> 3        3  [-7.5,-5)    11 3237.44 3387.82     negative #> 4        4  [-5,-2.5)   162 3126.16 3352.38     negative #> 5        5   [-2.5,0)  3744 2703.00 2849.66     positive #> 6        6    [0,2.5)  5703 1748.06 1962.68     positive #> 7        7    [2.5,5) 11802 2014.45 2156.92     positive #> 8        8    [5,7.5)  7102 1700.90 1829.22     positive #> 9        9   [7.5,10)  1719 1333.89 1504.28     positive #> 10      10    [10,20)    57 1636.81 1777.11     negative"},{"path":"https://r-spatialecology.github.io/shar/articles/cormus_domestica_tmp.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Analysing the climatic niche of Cormus domestica","text":"Chamberlain SA, Boettiger C. 2017. R Python, Ruby clients GBIF species occurrence data. PeerJ Preprints 5:e3304v1 doi:10.7287/peerj.preprints.3304v1 De Rigo, D., Caudullo, G., Houston Durrant, T. San-Miguel-Ayanz, J., 2016. European Atlas Forest Tree Species: modelling, data information forest tree species. European Atlas Forest Tree Species, p.e01aa69. doi:10.2788/4251 New, M., Lister, D., Hulme, M. Makin, ., 2002. high-resolution data set surface climate global land areas. Climate research, 21(1), pp.1-25. doi:10.3354/cr021001 Rotach, P., 2003. EUFORGEN Technical Guidelines genetic conservation use service tree (Sorbus domestica). Bioversity International. South (2022). rnaturalearth: World Map Data Natural Earth. https://docs.ropensci.org/rnaturalearth (website) https://github.com/ropensci/rnaturalearth. Sparks, (2017). getCRUCLdata: Use Explore CRU CL v. 2.0 Climatology Elements R. Journal Open Source Software, 2(12), 230, doi:10.21105/joss.00230","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/get_started.html","id":"design","dir":"Articles","previous_headings":"","what":"Design","title":"Get started","text":"core shar functions simulate null model data randomizing either environmental data (.e., raster) locations species (.e., point pattern). null model data used analyse significant species-habitat associations present. Additionally, functions visualize analyse results available well utility functions. methods mainly described Harms et al.¬†(2001), Plotkin et al.¬†(2000), Wiegand & Moloney (2014). methods necessary complementary, rather different approaches achieve result.","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/get_started.html","id":"data","dir":"Articles","previous_headings":"Design","what":"Data","title":"Get started","text":"shar comes build-example data sets. species_a species_b exemplary locations individuals, e.g., tree locations wthin forest study plot (ppp-objects); landscape contains exemplary continuous environmental data (SpatRast-object).","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/get_started.html","id":"preprocessing-of-input-data","dir":"Articles","previous_headings":"","what":"Preprocessing of input data","title":"Get started","text":"functions designed discrete habitat classes. Thus, continuous data available, classified discrete classes first. classify_habitats provides several ways classify data, Fisher-Jenks algorithm (Fisher 1958, Jenks & Caspall 1971).","code":"landscape_discrete <- classify_habitats(raster = terra::rast(landscape), n = 5, style = \"fisher\")"},{"path":"https://r-spatialecology.github.io/shar/articles/get_started.html","id":"randomize-environmental-data","dir":"Articles","previous_headings":"","what":"Randomize environmental data","title":"Get started","text":"two functions randomize environmental data: translate_raster() randomize_raster(). first function torus translation raster, shifting habitat map four cardinal directions. possible rectangular observation areas results R (terra::nrow(terra::rast(landscape)) + 1) * (terra::ncol(terra::rast(landscape)) + 1)  - 4 randomized raster (based number rows cols). function randomizes environmental data using random-walk algorithm. , number randomized raster can specified using n_random argument. methods require ‚Äúfully mapped data‚Äù sense NA cells environmental data allowed cells accommodate locations individuals (e.g., water body within forest area). needs reflected observation window point pattern. torus translation method, NA values allowed .","code":"torus_trans <- translate_raster(raster = landscape_discrete)  random_walk <- randomize_raster(raster = landscape_discrete, n_random = 39)"},{"path":"https://r-spatialecology.github.io/shar/articles/get_started.html","id":"randomize-location-data","dir":"Articles","previous_headings":"","what":"Randomize location data","title":"Get started","text":"randomize location data (.e.¬†point pattern) either fit_point_process() reconstruct_pattern() available. first fits Poisson process cluster process data. second functions reconstructs spatial characteristics data using pattern reconstruction (Kirkpatrick et al.¬†1983; Tscheschel & Stoyan 2006). advantageous point patterns describable simple point process models. function, number patterns can specified n_random argument.","code":"gamma_test <- fit_point_process(pattern = species_b, process = \"cluster\", n_random = 39)  # (this can takes some time) reconstruction <- reconstruct_pattern(pattern = species_b, n_random = 39,                                        e_threshold = 0.05, method = \"cluster\")"},{"path":"https://r-spatialecology.github.io/shar/articles/get_started.html","id":"analyse-results","dir":"Articles","previous_headings":"","what":"Analyse results","title":"Get started","text":"important function analyse results results_habitat_association(). function compares observed data null model data able show significant species-habitat associations. function work , randomized environmental data randomized location data. Please aware due randomization null model data, results might slightly differ different randomization approaches (e.g., fit_point_process() vs.¬†translate_raster()), even repetitions approach. Thus, exact lo hi thresholds might slightly different re-running examples. However, counts observed data identical, general results trends similar. data created species_a negative association habitat 4 species_b positive association habitat 5, reflected results. Given characteristics method, positive association one habitat inevitably leads negative association least one habitats (vice versa; Yamada et al.¬†2006). example, high amount individual points positively associated habitat simultaneously mean less individual points can present habitats.","code":"results_habitat_association(pattern = species_a, raster = random_walk) #> > Input: randomized raster #> > Quantile thresholds: negative < 0.025 || positive > 0.975 #>   habitat breaks count    lo    hi significance #> 1       1     NA    35 11.00 30.20     positive #> 2       2     NA    44 23.70 49.05         n.s. #> 3       3     NA    36 21.75 49.05         n.s. #> 4       4     NA     4 24.80 59.05     negative #> 5       5     NA    73 51.95 77.05         n.s.  results_habitat_association(pattern = reconstruction, raster = landscape_discrete) #> > Input: randomized pattern #> > Quantile thresholds: negative < 0.025 || positive > 0.975 #>   habitat breaks count    lo     hi significance #> 1       1     NA     6  5.90  26.95         n.s. #> 2       2     NA    18 11.85  51.40         n.s. #> 3       3     NA    18 16.95  56.25         n.s. #> 4       4     NA    21 27.70  54.00     negative #> 5       5     NA   129 39.75 100.10     positive"},{"path":"https://r-spatialecology.github.io/shar/articles/get_started.html","id":"utility-functions","dir":"Articles","previous_headings":"","what":"Utility functions","title":"Get started","text":"also possibility visualize randomized data using plot() function.  many functions, can found .","code":"plot(reconstruction, ask = FALSE) col_palette <- c(\"#440154FF\", \"#3B528BFF\", \"#21908CFF\", \"#5DC863FF\", \"#FDE725FF\")  plot(torus_trans, col = col_palette)"},{"path":"https://r-spatialecology.github.io/shar/articles/get_started.html","id":"citation","dir":"Articles","previous_headings":"Utility functions","what":"Citation","title":"Get started","text":"shar package part academic work. cite package acknowledge use publications, please cite following paper. Hesselbarth, M.H.K., (2021). shar: R package analyze species-habitat associations using point pattern analysis. Journal Open Source Software, 6(67), 3811. https://doi.org/10.21105/joss.03811. use reconstruct_pattern_multi() function, please also cite. Wudel C., Schlicht R., Berger U. (2023). Multi-trait point pattern reconstruction plant ecosystems. Methods Ecology Evolution, 14, 2668‚Äì2679. https://doi.org/10.1111/2041-210X.14206. get BibTex entry, please use citation(\"shar\").","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/get_started.html","id":"references","dir":"Articles","previous_headings":"Utility functions","what":"References","title":"Get started","text":"Fisher, W.D., 1958. grouping maximum homogeneity. Journal American Statistical Association 53, 789‚Äì798. https://doi.org/10.1080/01621459.1958.10501479 Harms, K.E., Condit, R., Hubbell, S.P., Foster, R.B., 2001. Habitat associations trees shrubs 50-ha neotropical forest plot. Journal Ecology 89, 947‚Äì959. https://doi.org/10.1111/j.1365-2745.2001.00615.x Jenks, G.F., Caspall, F.C., 1971. Error choroplethic maps: Definition, measurement, reduction. Annals Association American Geographers 61, 217‚Äì244. https://doi.org/10.1111/j.1467-8306.1971.tb00779.x Kirkpatrick, S., Gelatt, C.D.Jr., Vecchi, M.P., 1983. Optimization simulated annealing. Science 220, 671‚Äì680. https://doi.org/10.1126/science.220.4598.671 Plotkin, J.B., Potts, M.D., Leslie, N., Manokaran, N., LaFrankie, J.V., Ashton, P.S., 2000. Species-area curves, spatial aggregation, habitat specialization tropical forests. Journal Theoretical Biology 207, 81‚Äì99. https://doi.org/10.1006/jtbi.2000.2158 Tscheschel, ., Stoyan, D., 2006. Statistical reconstruction random point patterns. Computational Statistics Data Analysis 51, 859‚Äì871. https://doi.org/10.1016/j.csda.2005.09.007 Wiegand, T., Moloney, K.., 2014. Handbook spatial point-pattern analysis ecology. Chapman Hall/CRC Press, Boca Raton. ISBN 978-1-4200-8254-8 Yamada, T., Tomita, ., Itoh, ., Yamakura, T., Ohkubo, T., Kanzaki, M., Tan, S., Ashton, P.S., 2006. Habitat associations Sterculiaceae trees Bornean rain forest plot. Journal Vegetation Science 17, 559‚Äì566. https://doi.org/10.1111/j.1654-1103.2006.tb02479.x","code":""},{"path":"https://r-spatialecology.github.io/shar/articles/publication_record.html","id":"a-list-of-publications","dir":"Articles","previous_headings":"","what":"A list of publications","title":"Publication record","text":"see papers already used landscapemetrics, please click ","code":""},{"path":"https://r-spatialecology.github.io/shar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maximilian H.K. Hesselbarth. Author, maintainer. Marco Sciaini. Author. Chris Wudel. Author. Zeke Marshall. Contributor. Thomas Etherington. Contributor. Janosch Heinermann. Contributor.","code":""},{"path":"https://r-spatialecology.github.io/shar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hesselbarth M (2021). ‚Äúshar: R package analyze species-habitat associations using point pattern analysis.‚Äù Journal Open Source Software, 6(67), 3811. doi:10.21105/joss.03811. Wudel C, Schlicht R, Berger U (2023). ‚ÄúMulti-trait point pattern reconstruction plant ecosystems.‚Äù Methods Ecology Evolution, 14, 2668‚Äì2679. doi:10.1111/2041-210X.14206.","code":"@Article{,   title = {shar: A R package to analyze species-habitat associations using point pattern analysis},   author = {Maximilian H.K. Hesselbarth},   journal = {Journal of Open Source Software},   year = {2021},   volume = {6},   number = {67},   pages = {3811},   doi = {10.21105/joss.03811}, } @Article{,   title = {Multi-trait point pattern reconstruction of plant ecosystems.},   author = {Chris Wudel and Robert Schlicht and Uta Berger},   journal = {Methods in Ecology and Evolution},   year = {2023},   volume = {14},   pages = {2668‚Äì2679},   doi = {10.1111/2041-210X.14206}, }"},{"path":"https://r-spatialecology.github.io/shar/index.html","id":"shar--species-habitat-associations-in-r-","dir":"","previous_headings":"","what":"Species-Habitat Associations","title":"Species-Habitat Associations","text":"Species-habitat associations R provides toolset functions R programming language analyze species-habitat associations. Therefore, information location species (point pattern) environmental conditions (raster) needed. order analyse data significant habitat associations either location data environmental data randomized n-times. , counts within habitats compared observed randomized data. Positive negative associations present observed counts higher lower randomized counts (using quantile thresholds). Methods described Plotkin et al.¬†(2000), Harms et al.¬†(2001) Wiegand & Moloney (2014). shar mainly based spatstat (Baddeley et al.¬†2015) terra (Hijmans 2022) package. can find information help using corresponding homepage.","code":""},{"path":"https://r-spatialecology.github.io/shar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Species-Habitat Associations","text":"can install released version shar CRAN : development version GitHub : also automatically installs non-base R package dependencies, namely: classInt, spatstat.explore, spatstat.geom, spatstat.model, spatstat.random, terra.","code":"install.packages(\"shar\") # install.packages(\"remotes\") remotes::install_github(\"r-spatialecology/shar\")"},{"path":"https://r-spatialecology.github.io/shar/index.html","id":"how-to-use-shar","dir":"","previous_headings":"","what":"How to use shar","title":"Species-Habitat Associations","text":"Please refer vignette(\"Get started\") homepage get introduction shar.","code":""},{"path":"https://r-spatialecology.github.io/shar/index.html","id":"citation","dir":"","previous_headings":"How to use shar","what":"Citation","title":"Species-Habitat Associations","text":"shar package part academic work. cite package acknowledge use publications, please cite following paper. Hesselbarth, M.H.K., (2021). shar: R package analyze species-habitat associations using point pattern analysis. Journal Open Source Software, 6(67), 3811. https://doi.org/10.21105/joss.03811. use reconstruct_pattern_multi() function, please also cite. Wudel C., Schlicht R., Berger U. (2023). Multi-trait point pattern reconstruction plant ecosystems. Methods Ecology Evolution, 14, 2668‚Äì2679. https://doi.org/10.1111/2041-210X.14206. get BibTex entry, please use citation(\"shar\").","code":""},{"path":"https://r-spatialecology.github.io/shar/index.html","id":"contributing-and-code-of-conduct","dir":"","previous_headings":"","what":"Contributing and Code of Conduct","title":"Species-Habitat Associations","text":"Contributions shar highly welcomed appreciated. includes form feedback, bug reports, feature requests/suggestions, general questions usage. Please note shar package released Contributor Code Conduct. contributing project, agree abide terms. contribute project, please see Contributing guidelines.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/calc_gest.html","id":null,"dir":"Reference","previous_headings":"","what":"calc_gest ‚Äî calc_gest","title":"calc_gest ‚Äî calc_gest","text":"Calculate Gest","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/calc_gest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calc_gest ‚Äî calc_gest","text":"","code":"calc_gest(dist, r, n_points)"},{"path":"https://r-spatialecology.github.io/shar/reference/calc_gest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calc_gest ‚Äî calc_gest","text":"dist matrix distance pairs. r vector distances r. n_points numeric number points","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/calc_gest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calc_gest ‚Äî calc_gest","text":"data.frame","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/calc_gest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calc_gest ‚Äî calc_gest","text":"Calculates Gest based distances created get_dist_pairs.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/calc_moments.html","id":null,"dir":"Reference","previous_headings":"","what":"calc_moments ‚Äî calc_moments","title":"calc_moments ‚Äî calc_moments","text":"Calculate moments","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/calc_moments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calc_moments ‚Äî calc_moments","text":"","code":"calc_moments(fn, p, exclude = NULL, x, y, mark, kernel, rmax_bw, r)"},{"path":"https://r-spatialecology.github.io/shar/reference/calc_moments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calc_moments ‚Äî calc_moments","text":"fn Determination weightings mark correlation functions. p Defines initial state new ponit pattern. exclude Vector indicating values use. x, y x y coordinates points reference point pattern. mark Marks currently viewed point pattern. kernel Result kernel calculation, calculated calc_kernels function. rmax_bw Maximum distance summary statistics evaluated + Bandwidth kernels scaled, standard deviation smoothing kernel. r Sequence rmin rmax rcount steps.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/calc_moments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calc_moments ‚Äî calc_moments","text":"matrix","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/calc_moments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calc_moments ‚Äî calc_moments","text":"Definition product-moment function calculating contribution point coordinates x, y marking.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/calculate_energy.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate_energy ‚Äî calculate_energy","title":"calculate_energy ‚Äî calculate_energy","text":"Calculate mean energy","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/calculate_energy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate_energy ‚Äî calculate_energy","text":"","code":"calculate_energy(   pattern,   weights = c(1, 1),   return_mean = FALSE,   verbose = TRUE )"},{"path":"https://r-spatialecology.github.io/shar/reference/calculate_energy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate_energy ‚Äî calculate_energy","text":"pattern List reconstructed patterns. weights Vector weights used calculate energy. first number refers Gest(r), second number pcf(r). return_mean Logical mean energy returned. verbose Logical progress report printed.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/calculate_energy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate_energy ‚Äî calculate_energy","text":"vector","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/calculate_energy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calculate_energy ‚Äî calculate_energy","text":"function calculates mean energy (deviation) observed pattern reconstructed patterns (information see Tscheschel & Stoyan (2006) Wiegand & Moloney (2014)). pair correlation function nearest neighbour distance function used describe patterns.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/calculate_energy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"calculate_energy ‚Äî calculate_energy","text":"Kirkpatrick, S., Gelatt, C.D.Jr., Vecchi, M.P., 1983. Optimization simulated annealing. Science 220, 671‚Äì680. <https://doi.org/10.1126/science.220.4598.671> Tscheschel, ., Stoyan, D., 2006. Statistical reconstruction random point patterns. Computational Statistics Data Analysis 51, 859‚Äì871. <https://doi.org/10.1016/j.csda.2005.09.007> Wiegand, T., Moloney, K.., 2014. Handbook spatial point-pattern analysis ecology. Chapman Hall/CRC Press, Boca Raton. ISBN 978-1-4200-8254-8","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/calculate_energy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calculate_energy ‚Äî calculate_energy","text":"","code":"pattern_random <- fit_point_process(species_a, n_random = 19) #> Unmarking provided input pattern. #>  > Progress: n_random: 1/19\t\t #>  > Progress: n_random: 2/19\t\t #>  > Progress: n_random: 3/19\t\t #>  > Progress: n_random: 4/19\t\t #>  > Progress: n_random: 5/19\t\t #>  > Progress: n_random: 6/19\t\t #>  > Progress: n_random: 7/19\t\t #>  > Progress: n_random: 8/19\t\t #>  > Progress: n_random: 9/19\t\t #>  > Progress: n_random: 10/19\t\t #>  > Progress: n_random: 11/19\t\t #>  > Progress: n_random: 12/19\t\t #>  > Progress: n_random: 13/19\t\t #>  > Progress: n_random: 14/19\t\t #>  > Progress: n_random: 15/19\t\t #>  > Progress: n_random: 16/19\t\t #>  > Progress: n_random: 17/19\t\t #>  > Progress: n_random: 18/19\t\t #>  > Progress: n_random: 19/19\t\t #>  calculate_energy(pattern_random) #>  > Progress: 1/19\t\t #>  > Progress: 2/19\t\t #>  > Progress: 3/19\t\t #>  > Progress: 4/19\t\t #>  > Progress: 5/19\t\t #>  > Progress: 6/19\t\t #>  > Progress: 7/19\t\t #>  > Progress: 8/19\t\t #>  > Progress: 9/19\t\t #>  > Progress: 10/19\t\t #>  > Progress: 11/19\t\t #>  > Progress: 12/19\t\t #>  > Progress: 13/19\t\t #>  > Progress: 14/19\t\t #>  > Progress: 15/19\t\t #>  > Progress: 16/19\t\t #>  > Progress: 17/19\t\t #>  > Progress: 18/19\t\t #>  > Progress: 19/19\t\t #>  #>  randomized_1  randomized_2  randomized_3  randomized_4  randomized_5  #>     0.1152162     0.1214846     0.1345642     0.1270072     0.1500525  #>  randomized_6  randomized_7  randomized_8  randomized_9 randomized_10  #>     0.1278413     0.1283224     0.1075099     0.1212448     0.1222083  #> randomized_11 randomized_12 randomized_13 randomized_14 randomized_15  #>     0.1040198     0.1310942     0.2431391     0.1282213     0.1050189  #> randomized_16 randomized_17 randomized_18 randomized_19  #>     0.1171990     0.1330709     0.1672732     0.1391083  calculate_energy(pattern_random, return_mean = TRUE) #>  > Progress: 1/19\t\t #>  > Progress: 2/19\t\t #>  > Progress: 3/19\t\t #>  > Progress: 4/19\t\t #>  > Progress: 5/19\t\t #>  > Progress: 6/19\t\t #>  > Progress: 7/19\t\t #>  > Progress: 8/19\t\t #>  > Progress: 9/19\t\t #>  > Progress: 10/19\t\t #>  > Progress: 11/19\t\t #>  > Progress: 12/19\t\t #>  > Progress: 13/19\t\t #>  > Progress: 14/19\t\t #>  > Progress: 15/19\t\t #>  > Progress: 16/19\t\t #>  > Progress: 17/19\t\t #>  > Progress: 18/19\t\t #>  > Progress: 19/19\t\t #>  #> [1] 0.1328208  if (FALSE) { marks_sub <- spatstat.geom::subset.ppp(species_a, select = dbh) marks_recon <- reconstruct_pattern_marks(pattern_random$randomized[[1]], marks_sub, n_random = 19, max_runs = 1000) calculate_energy(marks_recon, return_mean = FALSE) }"},{"path":"https://r-spatialecology.github.io/shar/reference/classify_habitats.html","id":null,"dir":"Reference","previous_headings":"","what":"classify_habitats ‚Äî classify_habitats","title":"classify_habitats ‚Äî classify_habitats","text":"Classify habitats","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/classify_habitats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"classify_habitats ‚Äî classify_habitats","text":"","code":"classify_habitats(raster, return_breaks = FALSE, ...)"},{"path":"https://r-spatialecology.github.io/shar/reference/classify_habitats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"classify_habitats ‚Äî classify_habitats","text":"raster SpatRaster continuous environmental values. return_breaks Logical breaks returned well. ... Arguments passed classIntervals.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/classify_habitats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"classify_habitats ‚Äî classify_habitats","text":"SpatRaster","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/classify_habitats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"classify_habitats ‚Äî classify_habitats","text":"Classifies SpatRaster raster packages continuous values n discrete classes. cut function used classify raster, uses include.lowest = TRUE. information classification methods, see classIntervals classInt package /provided References. help page classIntervals also includes possible arguments find  breaks (e.g., different styles, number classes, fixed breaks, etc.).","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/classify_habitats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"classify_habitats ‚Äî classify_habitats","text":"Armstrong, M.P., Xiao, N., Bennett, D.., 2003. Using genetic algorithms create multicriteria class intervals choropleth maps. Annals Association American Geographers 93, 595‚Äì623. <https://doi.org/10.1111/1467-8306.9303005> Dent, B.D., 1999. Cartography: Thematic map design, 5th ed. WCB/McGraw-Hill, Boston, USA. ISBN 978-0-697-38495-9 Fisher, W.D., 1958. grouping maximum homogeneity. Journal American Statistical Association 53, 789‚Äì798. <https://doi.org/10.1080/01621459.1958.10501479> Jenks, G.F., Caspall, F.C., 1971. Error choroplethic maps: Definition, measurement, reduction. Annals Association American Geographers 61, 217‚Äì244. <https://doi.org/10.1111/j.1467-8306.1971.tb00779.x> Jiang, B., 2013. Head/tail breaks: new classification scheme data heavy-tailed distribution. Professional Geographer 65, 482-494. <https://doi.org/10.1080/00330124.2012.700499> Slocum, T.., McMaster, R.B., Kessler, F.C., Howard, H.H., 2009. Thematic cartography geovisualization, 3rd ed. ed, Prentice Hall Series Geographic Information Science. Pearson Prentice Hall, Upper Saddle River, USA. ISBN 978-0-13-229834-6 Wand, M. P., 1995. Data-based choice histogram binwidth. American Statistician 51, 59-64. <https://doi.org/10.1080/00031305.1997.10473591>","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/classify_habitats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"classify_habitats ‚Äî classify_habitats","text":"","code":"landscape_classified <- classify_habitats(terra::rast(landscape), n = 5, style = \"fisher\")  landscape_classified <- classify_habitats(terra::rast(landscape), style = \"fixed\", fixedBreaks = c(0, 0.25, 0.75, 1.0), return_breaks = TRUE)"},{"path":"https://r-spatialecology.github.io/shar/reference/classint_to_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"classint_to_vector ‚Äî classint_to_vector","title":"classint_to_vector ‚Äî classint_to_vector","text":"Convert classIntervals vector","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/classint_to_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"classint_to_vector ‚Äî classint_to_vector","text":"","code":"classint_to_vector(x, digits = NULL)"},{"path":"https://r-spatialecology.github.io/shar/reference/classint_to_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"classint_to_vector ‚Äî classint_to_vector","text":"x classIntervals object digits Integer digits used rounding.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/classint_to_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"classint_to_vector ‚Äî classint_to_vector","text":"vector","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/classint_to_vector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"classint_to_vector ‚Äî classint_to_vector","text":"Returns character vector breaks classIntervals object. digits = NULL, results rounded","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/classint_to_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"classint_to_vector ‚Äî classint_to_vector","text":"","code":"if (FALSE) { classint_to_vector(x = landscape_classified$breaks, digits = 4) }"},{"path":"https://r-spatialecology.github.io/shar/reference/compute_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"compute_statistics ‚Äî compute_statistics","title":"compute_statistics ‚Äî compute_statistics","text":"Compute summary statistics","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/compute_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute_statistics ‚Äî compute_statistics","text":"","code":"compute_statistics(x, y, k, xr, yr, w_statistics, bw, divisor, kernel_arg, r)"},{"path":"https://r-spatialecology.github.io/shar/reference/compute_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute_statistics ‚Äî compute_statistics","text":"x, y x y coordinates points reference point pattern. k Vector values k; used Dk included w_statistics . xr, yr x y extension observation window (start, end). w_statistics vector named weights optional spatial statistics spatstat package included energy calculation. may include Dk, K, Hs, pcf. bw, divisor, kernel_arg, r Several parameters related summary function.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/compute_statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute_statistics ‚Äî compute_statistics","text":"list","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/compute_statistics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"compute_statistics ‚Äî compute_statistics","text":"Compute optional spatial statistics using spatstat package.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/create_neighbourhood.html","id":null,"dir":"Reference","previous_headings":"","what":"create_neighbourhood ‚Äî create_neighbourhood","title":"create_neighbourhood ‚Äî create_neighbourhood","text":"Create neighbourhood","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/create_neighbourhood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_neighbourhood ‚Äî create_neighbourhood","text":"","code":"create_neighbourhood(cells, matrix, directions = 4)"},{"path":"https://r-spatialecology.github.io/shar/reference/create_neighbourhood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_neighbourhood ‚Äî create_neighbourhood","text":"cells Matrix cell ids focal cells. matrix Matrix cells located. directions Integer cells neighbourhood rule: 4 (rook's case), 8 (queen's case).","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/create_neighbourhood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_neighbourhood ‚Äî create_neighbourhood","text":"matrix","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/create_neighbourhood.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create_neighbourhood ‚Äî create_neighbourhood","text":"Get cell ids neighbouring cells. neighbourhoood rule can specified either rook's case (4 neighbours) queen's case (8 neighbours).","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/create_neighbourhood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create_neighbourhood ‚Äî create_neighbourhood","text":"","code":"if (FALSE) { mat <- matrix(1, nrow= 10, ncol = 10) cell_id <- rbind(cbind(3,5), cbind(7,1)) create_neighbourhood(cell_id, mat) }"},{"path":"https://r-spatialecology.github.io/shar/reference/energy_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"energy_fun ‚Äî Energy_fun","title":"energy_fun ‚Äî Energy_fun","text":"Energy function","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/energy_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"energy_fun ‚Äî Energy_fun","text":"","code":"Energy_fun(   f,   f0,   statistics,   f_,   f0_,   statistics_,   fn,   p,   p_,   Lp,   w_statistics )"},{"path":"https://r-spatialecology.github.io/shar/reference/energy_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"energy_fun ‚Äî Energy_fun","text":"f Result calc_moments_full function represents product-moment contribution point coordinates x, y marks, whole new ponit pattern. f0 Column sums weights brand correlation functions new point pattern. statistics Results compute_statistics function new point pattern (calculation optional spatial statistics). fn Determination weightings mark correlation functions. p Defines initial state new ponit pattern. p_ Reference point pattern. Lp Distance measure calculation energy function (Lp distance, 1 <= p <Inf). w_statistics Vector named weights optional spatial statistics spatstat package included energy calculation.may include Dk, K, Hs, pcf.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/energy_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"energy_fun ‚Äî Energy_fun","text":"vector","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/energy_fun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"energy_fun ‚Äî Energy_fun","text":"Defining Energy_fun function calculate \"energy\" pattern (lower energy indicates better match).","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/extract_points.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_points ‚Äî extract_points","title":"extract_points ‚Äî extract_points","text":"Extract points","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/extract_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_points ‚Äî extract_points","text":"","code":"extract_points(raster, pattern)"},{"path":"https://r-spatialecology.github.io/shar/reference/extract_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_points ‚Äî extract_points","text":"raster SpatRaster environmental data pattern ppp object point pattern.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/extract_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_points ‚Äî extract_points","text":"data.frame","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/extract_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"extract_points ‚Äî extract_points","text":"function extracts number points within discrete habitat.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/extract_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract_points ‚Äî extract_points","text":"","code":"if (FALSE) { landscape_classified <- classify_habitats(terra::rast(landscape), n = 5, style = \"fisher\") extract_points(raster = landscape_classified, pattern = species_b) }"},{"path":"https://r-spatialecology.github.io/shar/reference/fit_point_process.html","id":null,"dir":"Reference","previous_headings":"","what":"fit_point_process ‚Äî fit_point_process","title":"fit_point_process ‚Äî fit_point_process","text":"Fit point process randomize data","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/fit_point_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit_point_process ‚Äî fit_point_process","text":"","code":"fit_point_process(   pattern,   n_random = 1,   process = \"poisson\",   return_para = FALSE,   return_input = TRUE,   simplify = FALSE,   verbose = TRUE )"},{"path":"https://r-spatialecology.github.io/shar/reference/fit_point_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit_point_process ‚Äî fit_point_process","text":"pattern ppp object point pattern n_random Integer number randomizations. process Character specifying point process model use. Either \"poisson\" \"cluster\". return_para Logical fitted parameters returned. return_input Logical original input data returned. simplify Logical pattern returned n_random = 1 return_input = FALSE. verbose Logical progress report printed.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/fit_point_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit_point_process ‚Äî fit_point_process","text":"rd_pat","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/fit_point_process.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fit_point_process ‚Äî fit_point_process","text":"functions randomizes observed point pattern fitting point process data simulating n_random patterns using fitted point process. possible choose Poisson process Thomas cluster process model. information point process models, see e.g. Wiegand & Moloney (2014).","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/fit_point_process.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"fit_point_process ‚Äî fit_point_process","text":"Plotkin, J.B., Potts, M.D., Leslie, N., Manokaran, N., LaFrankie, J.V., Ashton, P.S., 2000. Species-area curves, spatial aggregation, habitat specialization tropical forests. Journal Theoretical Biology 207, 81‚Äì99. <https://doi.org/10.1006/jtbi.2000.2158> Wiegand, T., Moloney, K.., 2014. Handbook spatial point-pattern analysis ecology. Chapman Hall/CRC Press, Boca Raton. ISBN 978-1-4200-8254-8","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/fit_point_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fit_point_process ‚Äî fit_point_process","text":"","code":"pattern_fitted <- fit_point_process(pattern = species_a, n_random = 39) #> Unmarking provided input pattern. #>  > Progress: n_random: 1/39\t\t #>  > Progress: n_random: 2/39\t\t #>  > Progress: n_random: 3/39\t\t #>  > Progress: n_random: 4/39\t\t #>  > Progress: n_random: 5/39\t\t #>  > Progress: n_random: 6/39\t\t #>  > Progress: n_random: 7/39\t\t #>  > Progress: n_random: 8/39\t\t #>  > Progress: n_random: 9/39\t\t #>  > Progress: n_random: 10/39\t\t #>  > Progress: n_random: 11/39\t\t #>  > Progress: n_random: 12/39\t\t #>  > Progress: n_random: 13/39\t\t #>  > Progress: n_random: 14/39\t\t #>  > Progress: n_random: 15/39\t\t #>  > Progress: n_random: 16/39\t\t #>  > Progress: n_random: 17/39\t\t #>  > Progress: n_random: 18/39\t\t #>  > Progress: n_random: 19/39\t\t #>  > Progress: n_random: 20/39\t\t #>  > Progress: n_random: 21/39\t\t #>  > Progress: n_random: 22/39\t\t #>  > Progress: n_random: 23/39\t\t #>  > Progress: n_random: 24/39\t\t #>  > Progress: n_random: 25/39\t\t #>  > Progress: n_random: 26/39\t\t #>  > Progress: n_random: 27/39\t\t #>  > Progress: n_random: 28/39\t\t #>  > Progress: n_random: 29/39\t\t #>  > Progress: n_random: 30/39\t\t #>  > Progress: n_random: 31/39\t\t #>  > Progress: n_random: 32/39\t\t #>  > Progress: n_random: 33/39\t\t #>  > Progress: n_random: 34/39\t\t #>  > Progress: n_random: 35/39\t\t #>  > Progress: n_random: 36/39\t\t #>  > Progress: n_random: 37/39\t\t #>  > Progress: n_random: 38/39\t\t #>  > Progress: n_random: 39/39\t\t #>"},{"path":"https://r-spatialecology.github.io/shar/reference/get_dist_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"get_dist_pairs ‚Äî get_dist_pairs","title":"get_dist_pairs ‚Äî get_dist_pairs","text":"Distance points","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/get_dist_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_dist_pairs ‚Äî get_dist_pairs","text":"","code":"get_dist_pairs(X, rmax)"},{"path":"https://r-spatialecology.github.io/shar/reference/get_dist_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_dist_pairs ‚Äî get_dist_pairs","text":"X ppp object rmax Numeric maximum distance","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/get_dist_pairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_dist_pairs ‚Äî get_dist_pairs","text":"matrix","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/get_dist_pairs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_dist_pairs ‚Äî get_dist_pairs","text":"Returns matrix point pairs distances .","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/landscape.html","id":null,"dir":"Reference","previous_headings":"","what":"Example landscape (random cluster neutral landscape model). ‚Äî landscape","title":"Example landscape (random cluster neutral landscape model). ‚Äî landscape","text":"example map show landscapetools functionality generated NLMR::nlm_fbm() algorithm.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/landscape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example landscape (random cluster neutral landscape model). ‚Äî landscape","text":"","code":"landscape"},{"path":"https://r-spatialecology.github.io/shar/reference/landscape.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example landscape (random cluster neutral landscape model). ‚Äî landscape","text":"SpatRaster object.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/landscape.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example landscape (random cluster neutral landscape model). ‚Äî landscape","text":"Simulated neutral landscape model R. <https://github.com/ropensci/NLMR/>","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/list_to_randomized.html","id":null,"dir":"Reference","previous_headings":"","what":"list_to_randomized ‚Äî list_to_randomized","title":"list_to_randomized ‚Äî list_to_randomized","text":"Convert list rd_* object.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/list_to_randomized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"list_to_randomized ‚Äî list_to_randomized","text":"","code":"list_to_randomized(list, observed = NULL)"},{"path":"https://r-spatialecology.github.io/shar/reference/list_to_randomized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"list_to_randomized ‚Äî list_to_randomized","text":"list List observed Observed","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/list_to_randomized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"list_to_randomized ‚Äî list_to_randomized","text":"rd_pat, rd_ras","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/list_to_randomized.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"list_to_randomized ‚Äî list_to_randomized","text":"Convert list randomized point pattern raster layer rd_* object can used functions package. main purpose utility function allow easy parallelization randomization approach. information, please see \"Parallelization\" article.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/list_to_randomized.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"list_to_randomized ‚Äî list_to_randomized","text":"","code":"if (FALSE) { fit_list <- lapply(X = 1:39, FUN = function(i) {fit_point_process(pattern = species_a, n_random = 1, simplify = TRUE, return_input = FALSE, verbose = FALSE)})  list_to_randomized(list = fit_list, observed = species_a) }"},{"path":"https://r-spatialecology.github.io/shar/reference/pack_randomized.html","id":null,"dir":"Reference","previous_headings":"","what":"pack_randomized ‚Äî pack_randomized","title":"pack_randomized ‚Äî pack_randomized","text":"Save randomized raster object","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/pack_randomized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pack_randomized ‚Äî pack_randomized","text":"","code":"pack_randomized(raster)"},{"path":"https://r-spatialecology.github.io/shar/reference/pack_randomized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pack_randomized ‚Äî pack_randomized","text":"raster rd_ras object randomized raster.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/pack_randomized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pack_randomized ‚Äî pack_randomized","text":"rd_ras","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/pack_randomized.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"pack_randomized ‚Äî pack_randomized","text":"SpatRaster saved (need packed), function wraps raster objects prepares saving first. details, see wrap.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/pack_randomized.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pack_randomized ‚Äî pack_randomized","text":"","code":"if (FALSE) { landscape_classified <- classify_habitats(terra::rast(landscape), n = 5, style = \"fisher\") landscape_random <- randomize_raster(landscape_classified, n_random = 3) x <- pack_randomized(raster = landscape_random) }"},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_mar.html","id":null,"dir":"Reference","previous_headings":"","what":"plot.rd_mar ‚Äî plot.rd_mar","title":"plot.rd_mar ‚Äî plot.rd_mar","text":"Plot method rd_pat object","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_mar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot.rd_mar ‚Äî plot.rd_mar","text":"","code":"# S3 method for rd_mar plot(   x,   what = \"sf\",   n = NULL,   probs = c(0.025, 0.975),   ask = TRUE,   verbose = TRUE,   ... )"},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_mar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot.rd_mar ‚Äî plot.rd_mar","text":"x rd_mar object randomized patterns. Character specifying plot summary functions point patterns (= \"sf\") actual patterns (= \"pp\"). n Integer number vector ids randomized pattern plot. See Details section information. probs Vector quantiles randomized data used envelope construction. ask Logical user asked press <RETURN> second summary function plotted (used = \"sf\"). verbose Logical progress report printed. ... used.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_mar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot.rd_mar ‚Äî plot.rd_mar","text":"void","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_mar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot.rd_mar ‚Äî plot.rd_mar","text":"function plots pair correlation function nearest neighbour function observed pattern reconstructed patterns (\"simulation envelopes\"). also possible plot n randomized patterns observed pattern using = \"pp\". n single number, n randomized patterns sampled plot. n vector, corresponding patterns plotted.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_mar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot.rd_mar ‚Äî plot.rd_mar","text":"","code":"if (FALSE) { pattern_recon <- reconstruct_pattern(species_a, n_random = 1, max_runs = 1000, simplify = TRUE, return_input = FALSE) marks_sub <- spatstat.geom::subset.ppp(species_a, select = dbh) marks_recon <- reconstruct_pattern_marks(pattern_recon, marks_sub, n_random = 19, max_runs = 1000) plot(marks_recon) }"},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"plot.rd_multi ‚Äî plot.rd_multi","title":"plot.rd_multi ‚Äî plot.rd_multi","text":"Plot method rd_multi object","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot.rd_multi ‚Äî plot.rd_multi","text":"","code":"# S3 method for rd_multi plot(x, verbose = TRUE, ...)"},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot.rd_multi ‚Äî plot.rd_multi","text":"x rd_multi Object created reconstruct_pattern_multi. multiple marks. verbose Logical progress printed. ... Currently used","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot.rd_multi ‚Äî plot.rd_multi","text":"void","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_multi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot.rd_multi ‚Äî plot.rd_multi","text":"Calculates visualises various summary statistics results multi-marks point pattern reconstruction.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_pat.html","id":null,"dir":"Reference","previous_headings":"","what":"plot.rd_pat ‚Äî plot.rd_pat","title":"plot.rd_pat ‚Äî plot.rd_pat","text":"Plot method rd_pat object","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_pat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot.rd_pat ‚Äî plot.rd_pat","text":"","code":"# S3 method for rd_pat plot(   x,   what = \"sf\",   n = NULL,   probs = c(0.025, 0.975),   ask = TRUE,   verbose = TRUE,   ... )"},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_pat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot.rd_pat ‚Äî plot.rd_pat","text":"x rd_pat object randomized patterns. Character specifying plot summary functions point patterns (= \"sf\") actual patterns (= \"pp\"). n Integer number vector ids randomized pattern plot. See Details section information. probs Vector quantiles randomized data used envelope construction. ask Logical user asked press <RETURN> second summary function plotted (used = \"sf\"). verbose Logical progress report printed. ... used.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_pat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot.rd_pat ‚Äî plot.rd_pat","text":"void","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_pat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot.rd_pat ‚Äî plot.rd_pat","text":"function plots pair correlation function nearest neighbour function observed pattern reconstructed patterns (\"simulation envelopes\"). also possible plot n randomized patterns observed pattern using = \"pp\". n single number, n randomized patterns sampled plot. n vector, corresponding patterns plotted.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_pat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot.rd_pat ‚Äî plot.rd_pat","text":"","code":"if (FALSE) { pattern_random <- fit_point_process(species_a, n_random = 39) plot(pattern_random)  pattern_recon <- reconstruct_pattern(species_b, n_random = 19, max_runs = 1000, method = \"hetero\") plot(pattern_recon) }"},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_ras.html","id":null,"dir":"Reference","previous_headings":"","what":"plot.rd_ras ‚Äî plot.rd_ras","title":"plot.rd_ras ‚Äî plot.rd_ras","text":"Plot method rd_ras object","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_ras.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot.rd_ras ‚Äî plot.rd_ras","text":"","code":"# S3 method for rd_ras plot(x, n = NULL, col, verbose = TRUE, nrow, ncol, ...)"},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_ras.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot.rd_ras ‚Äî plot.rd_ras","text":"x rd_ras object randomized raster. n Integer number vector ids randomized raster plot. See Details section information. col Vector color palette used plotting. verbose Logical messages printed. nrow, ncol Integer number rows columns plot grid. ... used.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_ras.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot.rd_ras ‚Äî plot.rd_ras","text":"void","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_ras.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot.rd_ras ‚Äî plot.rd_ras","text":"Function plot randomized raster. n single number, n randomized raster sampled plot. n vector, corresponding raster plotted. col, nrow, ncol passed plot.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/plot.rd_ras.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot.rd_ras ‚Äî plot.rd_ras","text":"","code":"if (FALSE) { landscape_classified <- classify_habitats(terra::rast(landscape), n = 5, style = \"fisher\") landscape_random <- randomize_raster(landscape_classified, n_random = 19) plot(landscape_random) }"},{"path":"https://r-spatialecology.github.io/shar/reference/plot_energy.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_energy ‚Äî plot_energy","title":"plot_energy ‚Äî plot_energy","text":"Plot energy pattern reconstruction","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot_energy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_energy ‚Äî plot_energy","text":"","code":"plot_energy(pattern, col = NULL)"},{"path":"https://r-spatialecology.github.io/shar/reference/plot_energy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_energy ‚Äî plot_energy","text":"pattern rd_pat rd_mar object randomized patterns. col Vector colors. Must length n_random.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot_energy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_energy ‚Äî plot_energy","text":"void","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/plot_energy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_energy ‚Äî plot_energy","text":"function plots decrease energy time, .e. iterations. can help identify chosen max_runs reconstruction sufficient. pattern object must created using reconstruct_pattern_* .","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/plot_energy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_energy ‚Äî plot_energy","text":"","code":"if (FALSE) { pattern_recon <- reconstruct_pattern(species_a, n_random = 3, max_runs = 1000) plot_energy(pattern_recon)  marks_sub <- spatstat.geom::subset.ppp(species_a, select = dbh) marks_recon <- reconstruct_pattern_marks(pattern_recon$randomized[[1]], marks_sub, n_random = 1, max_runs = 1000) plot_energy(marks_recon) }"},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_mar.html","id":null,"dir":"Reference","previous_headings":"","what":"print.rd_mar ‚Äî print.rd_mar","title":"print.rd_mar ‚Äî print.rd_mar","text":"Print method rd_mar object","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_mar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print.rd_mar ‚Äî print.rd_mar","text":"","code":"# S3 method for rd_mar print(x, digits = 4, ...)"},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_mar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print.rd_mar ‚Äî print.rd_mar","text":"x rd_mar object randomized patterns. digits Integer number decimal places (round) printed. ... Arguments passed cat.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_mar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print.rd_mar ‚Äî print.rd_mar","text":"void","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_mar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"print.rd_mar ‚Äî print.rd_mar","text":"Printing method random patterns created reconstruct_pattern_marks.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_mar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print.rd_mar ‚Äî print.rd_mar","text":"","code":"if (FALSE) { pattern_recon <- reconstruct_pattern(species_a, n_random = 1, max_runs = 1000, simplify = TRUE, return_input = FALSE) marks_sub <- spatstat.geom::subset.ppp(species_a, select = dbh) marks_recon <- reconstruct_pattern_marks(pattern_recon, marks_sub, n_random = 19, max_runs = 1000) print(marks_recon) }"},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_pat.html","id":null,"dir":"Reference","previous_headings":"","what":"print.rd_pat ‚Äî print.rd_pat","title":"print.rd_pat ‚Äî print.rd_pat","text":"Print method rd_pat object","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_pat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print.rd_pat ‚Äî print.rd_pat","text":"","code":"# S3 method for rd_pat print(x, digits = 4, ...)"},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_pat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print.rd_pat ‚Äî print.rd_pat","text":"x rd_pat object randomized patterns. digits Integer number decimal places (round). ... Arguments passed cat.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_pat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print.rd_pat ‚Äî print.rd_pat","text":"void","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_pat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"print.rd_pat ‚Äî print.rd_pat","text":"Printing method random patterns created reconstruct_pattern_*.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_pat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print.rd_pat ‚Äî print.rd_pat","text":"","code":"pattern_random <- fit_point_process(species_a, n_random = 199) #> Unmarking provided input pattern. #>  > Progress: n_random: 1/199\t\t #>  > Progress: n_random: 2/199\t\t #>  > Progress: n_random: 3/199\t\t #>  > Progress: n_random: 4/199\t\t #>  > Progress: n_random: 5/199\t\t #>  > Progress: n_random: 6/199\t\t #>  > Progress: n_random: 7/199\t\t #>  > Progress: n_random: 8/199\t\t #>  > Progress: n_random: 9/199\t\t #>  > Progress: n_random: 10/199\t\t #>  > Progress: n_random: 11/199\t\t #>  > Progress: n_random: 12/199\t\t #>  > Progress: n_random: 13/199\t\t #>  > Progress: n_random: 14/199\t\t #>  > Progress: n_random: 15/199\t\t #>  > Progress: n_random: 16/199\t\t #>  > Progress: n_random: 17/199\t\t #>  > Progress: n_random: 18/199\t\t #>  > Progress: n_random: 19/199\t\t #>  > Progress: n_random: 20/199\t\t #>  > Progress: n_random: 21/199\t\t #>  > Progress: n_random: 22/199\t\t #>  > Progress: n_random: 23/199\t\t #>  > Progress: n_random: 24/199\t\t #>  > Progress: n_random: 25/199\t\t #>  > Progress: n_random: 26/199\t\t #>  > Progress: n_random: 27/199\t\t #>  > Progress: n_random: 28/199\t\t #>  > Progress: n_random: 29/199\t\t #>  > Progress: n_random: 30/199\t\t #>  > Progress: n_random: 31/199\t\t #>  > Progress: n_random: 32/199\t\t #>  > Progress: n_random: 33/199\t\t #>  > Progress: n_random: 34/199\t\t #>  > Progress: n_random: 35/199\t\t #>  > Progress: n_random: 36/199\t\t #>  > Progress: n_random: 37/199\t\t #>  > Progress: n_random: 38/199\t\t #>  > Progress: n_random: 39/199\t\t #>  > Progress: n_random: 40/199\t\t #>  > Progress: n_random: 41/199\t\t #>  > Progress: n_random: 42/199\t\t #>  > Progress: n_random: 43/199\t\t #>  > Progress: n_random: 44/199\t\t #>  > Progress: n_random: 45/199\t\t #>  > Progress: n_random: 46/199\t\t #>  > Progress: n_random: 47/199\t\t #>  > Progress: n_random: 48/199\t\t #>  > Progress: n_random: 49/199\t\t #>  > Progress: n_random: 50/199\t\t #>  > Progress: n_random: 51/199\t\t #>  > Progress: n_random: 52/199\t\t #>  > Progress: n_random: 53/199\t\t #>  > Progress: n_random: 54/199\t\t #>  > Progress: n_random: 55/199\t\t #>  > Progress: n_random: 56/199\t\t #>  > Progress: n_random: 57/199\t\t #>  > Progress: n_random: 58/199\t\t #>  > Progress: n_random: 59/199\t\t #>  > Progress: n_random: 60/199\t\t #>  > Progress: n_random: 61/199\t\t #>  > Progress: n_random: 62/199\t\t #>  > Progress: n_random: 63/199\t\t #>  > Progress: n_random: 64/199\t\t #>  > Progress: n_random: 65/199\t\t #>  > Progress: n_random: 66/199\t\t #>  > Progress: n_random: 67/199\t\t #>  > Progress: n_random: 68/199\t\t #>  > Progress: n_random: 69/199\t\t #>  > Progress: n_random: 70/199\t\t #>  > Progress: n_random: 71/199\t\t #>  > Progress: n_random: 72/199\t\t #>  > Progress: n_random: 73/199\t\t #>  > Progress: n_random: 74/199\t\t #>  > Progress: n_random: 75/199\t\t #>  > Progress: n_random: 76/199\t\t #>  > Progress: n_random: 77/199\t\t #>  > Progress: n_random: 78/199\t\t #>  > Progress: n_random: 79/199\t\t #>  > Progress: n_random: 80/199\t\t #>  > Progress: n_random: 81/199\t\t #>  > Progress: n_random: 82/199\t\t #>  > Progress: n_random: 83/199\t\t #>  > Progress: n_random: 84/199\t\t #>  > Progress: n_random: 85/199\t\t #>  > Progress: n_random: 86/199\t\t #>  > Progress: n_random: 87/199\t\t #>  > Progress: n_random: 88/199\t\t #>  > Progress: n_random: 89/199\t\t #>  > Progress: n_random: 90/199\t\t #>  > Progress: n_random: 91/199\t\t #>  > Progress: n_random: 92/199\t\t #>  > Progress: n_random: 93/199\t\t #>  > Progress: n_random: 94/199\t\t #>  > Progress: n_random: 95/199\t\t #>  > Progress: n_random: 96/199\t\t #>  > Progress: n_random: 97/199\t\t #>  > Progress: n_random: 98/199\t\t #>  > Progress: n_random: 99/199\t\t #>  > Progress: n_random: 100/199\t\t #>  > Progress: n_random: 101/199\t\t #>  > Progress: n_random: 102/199\t\t #>  > Progress: n_random: 103/199\t\t #>  > Progress: n_random: 104/199\t\t #>  > Progress: n_random: 105/199\t\t #>  > Progress: n_random: 106/199\t\t #>  > Progress: n_random: 107/199\t\t #>  > Progress: n_random: 108/199\t\t #>  > Progress: n_random: 109/199\t\t #>  > Progress: n_random: 110/199\t\t #>  > Progress: n_random: 111/199\t\t #>  > Progress: n_random: 112/199\t\t #>  > Progress: n_random: 113/199\t\t #>  > Progress: n_random: 114/199\t\t #>  > Progress: n_random: 115/199\t\t #>  > Progress: n_random: 116/199\t\t #>  > Progress: n_random: 117/199\t\t #>  > Progress: n_random: 118/199\t\t #>  > Progress: n_random: 119/199\t\t #>  > Progress: n_random: 120/199\t\t #>  > Progress: n_random: 121/199\t\t #>  > Progress: n_random: 122/199\t\t #>  > Progress: n_random: 123/199\t\t #>  > Progress: n_random: 124/199\t\t #>  > Progress: n_random: 125/199\t\t #>  > Progress: n_random: 126/199\t\t #>  > Progress: n_random: 127/199\t\t #>  > Progress: n_random: 128/199\t\t #>  > Progress: n_random: 129/199\t\t #>  > Progress: n_random: 130/199\t\t #>  > Progress: n_random: 131/199\t\t #>  > Progress: n_random: 132/199\t\t #>  > Progress: n_random: 133/199\t\t #>  > Progress: n_random: 134/199\t\t #>  > Progress: n_random: 135/199\t\t #>  > Progress: n_random: 136/199\t\t #>  > Progress: n_random: 137/199\t\t #>  > Progress: n_random: 138/199\t\t #>  > Progress: n_random: 139/199\t\t #>  > Progress: n_random: 140/199\t\t #>  > Progress: n_random: 141/199\t\t #>  > Progress: n_random: 142/199\t\t #>  > Progress: n_random: 143/199\t\t #>  > Progress: n_random: 144/199\t\t #>  > Progress: n_random: 145/199\t\t #>  > Progress: n_random: 146/199\t\t #>  > Progress: n_random: 147/199\t\t #>  > Progress: n_random: 148/199\t\t #>  > Progress: n_random: 149/199\t\t #>  > Progress: n_random: 150/199\t\t #>  > Progress: n_random: 151/199\t\t #>  > Progress: n_random: 152/199\t\t #>  > Progress: n_random: 153/199\t\t #>  > Progress: n_random: 154/199\t\t #>  > Progress: n_random: 155/199\t\t #>  > Progress: n_random: 156/199\t\t #>  > Progress: n_random: 157/199\t\t #>  > Progress: n_random: 158/199\t\t #>  > Progress: n_random: 159/199\t\t #>  > Progress: n_random: 160/199\t\t #>  > Progress: n_random: 161/199\t\t #>  > Progress: n_random: 162/199\t\t #>  > Progress: n_random: 163/199\t\t #>  > Progress: n_random: 164/199\t\t #>  > Progress: n_random: 165/199\t\t #>  > Progress: n_random: 166/199\t\t #>  > Progress: n_random: 167/199\t\t #>  > Progress: n_random: 168/199\t\t #>  > Progress: n_random: 169/199\t\t #>  > Progress: n_random: 170/199\t\t #>  > Progress: n_random: 171/199\t\t #>  > Progress: n_random: 172/199\t\t #>  > Progress: n_random: 173/199\t\t #>  > Progress: n_random: 174/199\t\t #>  > Progress: n_random: 175/199\t\t #>  > Progress: n_random: 176/199\t\t #>  > Progress: n_random: 177/199\t\t #>  > Progress: n_random: 178/199\t\t #>  > Progress: n_random: 179/199\t\t #>  > Progress: n_random: 180/199\t\t #>  > Progress: n_random: 181/199\t\t #>  > Progress: n_random: 182/199\t\t #>  > Progress: n_random: 183/199\t\t #>  > Progress: n_random: 184/199\t\t #>  > Progress: n_random: 185/199\t\t #>  > Progress: n_random: 186/199\t\t #>  > Progress: n_random: 187/199\t\t #>  > Progress: n_random: 188/199\t\t #>  > Progress: n_random: 189/199\t\t #>  > Progress: n_random: 190/199\t\t #>  > Progress: n_random: 191/199\t\t #>  > Progress: n_random: 192/199\t\t #>  > Progress: n_random: 193/199\t\t #>  > Progress: n_random: 194/199\t\t #>  > Progress: n_random: 195/199\t\t #>  > Progress: n_random: 196/199\t\t #>  > Progress: n_random: 197/199\t\t #>  > Progress: n_random: 198/199\t\t #>  > Progress: n_random: 199/199\t\t #>  print(pattern_random) #> No. of pattern: 200 #> Method: fit_point_process() #> Observed pattern: included #> Iterations (mean): NA #> Energy (mean): NA #> Stop criterion (no. of patterns): NA #> Extent: 0 1000 0 1000 (xmin, xmax, ymin, ymax)   if (FALSE) { pattern_recon <- reconstruct_pattern(species_b, n_random = 19, max_runs = 1000, method = \"hetero\") print(pattern_recon) }"},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_ras.html","id":null,"dir":"Reference","previous_headings":"","what":"print.rd_ras ‚Äî print.rd_ras","title":"print.rd_ras ‚Äî print.rd_ras","text":"Print method rd_ras object","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_ras.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print.rd_ras ‚Äî print.rd_ras","text":"","code":"# S3 method for rd_ras print(x, ...)"},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_ras.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print.rd_ras ‚Äî print.rd_ras","text":"x rd_ras object randomized raster. ... Arguments passed cat.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_ras.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print.rd_ras ‚Äî print.rd_ras","text":"void","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_ras.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"print.rd_ras ‚Äî print.rd_ras","text":"Printing method random patterns created randomize_raster translate_raster.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/print.rd_ras.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print.rd_ras ‚Äî print.rd_ras","text":"","code":"if (FALSE) { landscape_classified <- classify_habitats(terra::rast(landscape), n = 5, style = \"fisher\") landscape_random <- randomize_raster(landscape_classified, n_random = 19)  print(landscape_random) }"},{"path":"https://r-spatialecology.github.io/shar/reference/randomize_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"randomize_raster ‚Äî randomize_raster","title":"randomize_raster ‚Äî randomize_raster","text":"Randomized-habitats procedure","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/randomize_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"randomize_raster ‚Äî randomize_raster","text":"","code":"randomize_raster(   raster,   n_random = 1,   directions = 4,   return_input = TRUE,   simplify = FALSE,   verbose = TRUE )"},{"path":"https://r-spatialecology.github.io/shar/reference/randomize_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"randomize_raster ‚Äî randomize_raster","text":"raster SpatRaster discrete habitat classes. n_random Integer number randomizations. directions Interger cells neighbourhood rule: 4 (rook's case), 8 (queen's case). return_input Logical original input data returned. simplify Logical raster returned n_random = 1 return_input = FALSE. verbose Logical progress report printed.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/randomize_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"randomize_raster ‚Äî randomize_raster","text":"rd_ras","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/randomize_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"randomize_raster ‚Äî randomize_raster","text":"function randomizes habitat map discrete classes (SpatRaster) proposed Harms et al. (2001) ‚Äúrandomized-habitats procedure‚Äù. algorithm starts empty habitat map starts assign random neighbouring cells habitat (increasing order abundance observed map). modified procedure slightly increasing probability jump non-neighbouring cell current patch becomes larger. case SpatRaster contains NA cells, needs reflected observation window point pattern well (.e., point locations possible areas).","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/randomize_raster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"randomize_raster ‚Äî randomize_raster","text":"Harms, K.E., Condit, R., Hubbell, S.P., Foster, R.B., 2001. Habitat associations trees shrubs 50-ha neotropical forest plot. Journal Ecology 89, 947‚Äì959. <https://doi.org/10.1111/j.1365-2745.2001.00615.x>","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/randomize_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"randomize_raster ‚Äî randomize_raster","text":"","code":"if (FALSE) { landscape_classified <- classify_habitats(terra::rast(landscape), n = 5, style = \"fisher\") landscape_random <- randomize_raster(landscape_classified, n_random = 19) }"},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_algorithm.html","id":null,"dir":"Reference","previous_headings":"","what":"reconstruct_algorithm ‚Äî reconstruct_algorithm","title":"reconstruct_algorithm ‚Äî reconstruct_algorithm","text":"Pattern reconstruction (internal)","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_algorithm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reconstruct_algorithm ‚Äî reconstruct_algorithm","text":"","code":"reconstruct_algorithm(   pattern,   method,   n_random,   e_threshold,   max_runs,   no_change,   annealing,   weights,   r_length,   r_max,   stoyan,   verbose,   plot )"},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_algorithm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reconstruct_algorithm ‚Äî reconstruct_algorithm","text":"pattern ppp object pattern. n_random Integer number randomizations. e_threshold Double minimum energy stop reconstruction. max_runs Integer maximum number iterations e_threshold reached. no_change Integer number iterations reconstruction stop energy decrease. annealing Double probability keep relocated point even energy decrease. weights Vector weights used calculate energy. first number refers Gest(r), second number pcf(r). r_length Integer number intervals r = 0 r = rmax summary functions evaluated. r_max Double maximum distance used calculation summary functions. NULL, estimated data. stoyan Coefficient Stoyan's bandwidth selection rule. verbose Logical progress report printed. plot Logical pcf(r) function plotted updated optimization.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_algorithm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reconstruct_algorithm ‚Äî reconstruct_algorithm","text":"list","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"reconstruct_pattern ‚Äî reconstruct_pattern","title":"reconstruct_pattern ‚Äî reconstruct_pattern","text":"Pattern reconstruction","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reconstruct_pattern ‚Äî reconstruct_pattern","text":"","code":"reconstruct_pattern(   pattern,   method = \"homo\",   n_random = 1,   e_threshold = 0.01,   max_runs = 10000,   no_change = Inf,   annealing = 0.01,   weights = c(1, 1),   r_length = 255,   r_max = NULL,   stoyan = 0.15,   return_input = TRUE,   simplify = FALSE,   verbose = TRUE,   plot = FALSE )"},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reconstruct_pattern ‚Äî reconstruct_pattern","text":"pattern ppp object pattern. method Character specifying method. Either \"homo\", \"cluster\" \"hetero\". n_random Integer number randomizations. e_threshold Double minimum energy stop reconstruction. max_runs Integer maximum number iterations e_threshold reached. no_change Integer number iterations reconstruction stop energy decrease. annealing Double probability keep relocated point even energy decrease. weights Vector weights used calculate energy. first number refers Gest(r), second number pcf(r). r_length Integer number intervals r=0 r=rmax summary functions evaluated. r_max Double maximum distance used calculation summary functions. NULL, estimated data. stoyan Coefficient Stoyan's bandwidth selection rule. return_input Logical original input data returned. simplify Logical pattern returned n_random=1 return_input=FALSE. verbose Logical progress report printed. plot Logical pcf(r) function plotted updated optimization.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reconstruct_pattern ‚Äî reconstruct_pattern","text":"rd_pat","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"reconstruct_pattern ‚Äî reconstruct_pattern","text":"functions randomizes observed pattern using pattern reconstruction described Tscheschel & Stoyan (2006) Wiegand & Moloney (2014). algorithm shifts point new location keeps change , deviation observed reconstructed pattern decreases. pair correlation function nearest neighbour distance function used describe patterns. reconstruction can stopped automatically n steps energy decrease. number steps can controlled no_change set no_change = Inf default never stop automatically. weights must 0 < sum(weights) <= 1. weight summary functions identical, use weights = c(1, 1). spatstat sets r_length 513 default. However, lower value decreases computational time, increasing \"bumpiness\" summary function. arguments n_points window used method=\"homo\" .","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern.html","id":"method-homo-","dir":"Reference","previous_headings":"","what":"method=\"homo\":","title":"reconstruct_pattern ‚Äî reconstruct_pattern","text":"algorithm starts random pattern.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern.html","id":"method-cluster-","dir":"Reference","previous_headings":"","what":"method=\"cluster\":","title":"reconstruct_pattern ‚Äî reconstruct_pattern","text":"algorithm starts random clustered pattern.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern.html","id":"method-hetero-","dir":"Reference","previous_headings":"","what":"method=\"hetero\":","title":"reconstruct_pattern ‚Äî reconstruct_pattern","text":"algorithm starts random heterogeneous pattern.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"reconstruct_pattern ‚Äî reconstruct_pattern","text":"Kirkpatrick, S., Gelatt, C.D.Jr., Vecchi, M.P., 1983. Optimization simulated annealing. Science 220, 671‚Äì680. <https://doi.org/10.1126/science.220.4598.671> Tscheschel, ., Stoyan, D., 2006. Statistical reconstruction random point patterns. Computational Statistics Data Analysis 51, 859‚Äì871. <https://doi.org/10.1016/j.csda.2005.09.007> Wiegand, T., Moloney, K.., 2014. Handbook spatial point-pattern analysis ecology. Chapman Hall/CRC Press, Boca Raton. ISBN 978-1-4200-8254-8","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"reconstruct_pattern ‚Äî reconstruct_pattern","text":"","code":"if (FALSE) { pattern_recon <- reconstruct_pattern(species_b, n_random = 19, max_runs = 1000) }"},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_marks.html","id":null,"dir":"Reference","previous_headings":"","what":"reconstruct_pattern_marks ‚Äî reconstruct_pattern_marks","title":"reconstruct_pattern_marks ‚Äî reconstruct_pattern_marks","text":"Pattern reconstruction marked pattern","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_marks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reconstruct_pattern_marks ‚Äî reconstruct_pattern_marks","text":"","code":"reconstruct_pattern_marks(   pattern,   marked_pattern,   n_random = 1,   e_threshold = 0.01,   max_runs = 10000,   no_change = Inf,   annealing = 0.01,   r_length = 250,   r_max = NULL,   return_input = TRUE,   simplify = FALSE,   verbose = TRUE,   plot = FALSE )"},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_marks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reconstruct_pattern_marks ‚Äî reconstruct_pattern_marks","text":"pattern ppp object pattern. marked_pattern ppp  object marked pattern. See Details section information. n_random Integer number randomizations. e_threshold Double minimum energy stop reconstruction. max_runs Integer maximum number iterations e_threshold reached. no_change Integer number iterations reconstruction stop energy decrease. annealing Double probability keep relocated point even energy decrease. r_length Integer number intervals r = 0 r = rmax summary functions evaluated. r_max Double maximum distance used calculation summary functions. NULL, estimated data. return_input Logical original input data returned. simplify Logical pattern returned n_random = 1 return_input = FALSE. verbose Logical progress report printed. plot Logical pcf(r) function plotted updated optimization.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_marks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reconstruct_pattern_marks ‚Äî reconstruct_pattern_marks","text":"rd_mar","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_marks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"reconstruct_pattern_marks ‚Äî reconstruct_pattern_marks","text":"function randomizes numeric marks point pattern using pattern reconstruction described Tscheschel & Stoyan (2006) Wiegand & Moloney (2014). Therefore, unmarked well marked pattern must provided. unmarked pattern must spatial characteristics observation window number points marked one (see reconstruct_pattern_* fit_point_process). Marks must numeric mark-correlation function used summary function. Two randomly chosen marks switch iterations changes kept deviation observed reconstructed pattern decreases. spatstat sets r_length 513 default. However, lower value decreases computational time increasing \"bumpiness\" summary function.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_marks.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"reconstruct_pattern_marks ‚Äî reconstruct_pattern_marks","text":"Kirkpatrick, S., Gelatt, C.D.Jr., Vecchi, M.P., 1983. Optimization simulated annealing. Science 220, 671‚Äì680. <https://doi.org/10.1126/science.220.4598.671> Tscheschel, ., Stoyan, D., 2006. Statistical reconstruction random point patterns. Computational Statistics Data Analysis 51, 859‚Äì871. <https://doi.org/10.1016/j.csda.2005.09.007> Wiegand, T., Moloney, K.., 2014. Handbook spatial point-pattern analysis ecology. Chapman Hall/CRC Press, Boca Raton. ISBN 978-1-4200-8254-8","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_marks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"reconstruct_pattern_marks ‚Äî reconstruct_pattern_marks","text":"","code":"if (FALSE) { pattern_recon <- reconstruct_pattern(species_a, n_random = 1, max_runs = 1000, simplify = TRUE, return_input = FALSE) marks_sub <- spatstat.geom::subset.ppp(species_a, select = dbh) marks_recon <- reconstruct_pattern_marks(pattern_recon, marks_sub, n_random = 19, max_runs = 1000) }"},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"reconstruct_pattern_multi ‚Äî reconstruct_pattern_multi","title":"reconstruct_pattern_multi ‚Äî reconstruct_pattern_multi","text":"Pattern reconstruction pattern marked multiple traits.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reconstruct_pattern_multi ‚Äî reconstruct_pattern_multi","text":"","code":"reconstruct_pattern_multi(   marked_pattern,   xr = marked_pattern$window$xrange,   yr = marked_pattern$window$yrange,   n_repetitions = 1,   max_steps = 10000,   no_change = 5,   rcount = 250,   rmax = 25,   issue = 1000,   divisor = \"r\",   kernel_arg = \"epanechnikov\",   timing = FALSE,   energy_evaluation = FALSE,   plot = FALSE,   Lp = 1,   bw = if (divisor %in% c(\"r\", \"d\")) 0.5 else 5,   sd = \"step\",   steps_tol = 1000,   tol = 1e-04,   w_markcorr = c(d_d = 1, all = 1, d_all = 1, all_all = 1, d_d0 = 1, all0 = 1, d_all0 =     1, all_all0 = 1),   prob_of_actions = c(move_coordinate = 0.4, switch_coords = 0.1, exchange_mark_one =     0.1, exchange_mark_two = 0.1, pick_mark_one = 0.2, pick_mark_two = 0.1),   k = 1,   w_statistics = c(),   verbose = TRUE )"},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reconstruct_pattern_multi ‚Äî reconstruct_pattern_multi","text":"marked_pattern ppp  object marked pattern. See Details section information. xr, yr Maximum extent x y direction observation window. n_repetitions Integer representing number simulations performed. max_steps Maximum number simulation steps. no_change Integer representing number iterations (per 1000 simulation steps) reconstruction terminated energy decrease. rcount Integer representing number intervals summary statistics evaluated. rmax Maximum distance [m] summary statistics evaluated. issue Integer determines many simulations steps output occurs. divisor Choice divisor estimation formula: either \"r\" \"d\". kernel_arg kernel used calculate energy, possible kernels can : Gaussian, Epanechnikov, Rectangular, Cumulative. timing Logical value: computation time measured TRUE. energy_evaluation Logical value: TRUE, procedure stores energy shares total energy per simulation step. plot Logical value: TRUE, procedure records point pattern optimization updated. Lp Distance measure calculation energy function (Lp distance, 1 <= p < Inf). bw Bandwidth [m] kernels scaled, standard deviation smoothing kernel. sd standard deviation [m] used move_coordinate action. steps_tol value steps_tol checked whether energy change smaller tol. tol Stops procedure energy 1 - tol times changes. w_markcorr Vector possible weightings individual mcf's. (Default: equal). prob_of_actions Vector probabilities actions performed. c(move_coordinate = 0.4, switch_coords = 0.1, exchange_mark_one = 0.1, exchange_mark_two = 0.1, pick_mark_one = 0.2, pick_mark_two = 0.1). k Vector values k; used Dk included w_statistics. w_statistics vector named weights optional spatial statistics spatstat package included energy calculation. may include Dk, K, Hs, pcf. verbose Logical progress report printed.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reconstruct_pattern_multi ‚Äî reconstruct_pattern_multi","text":"rd_multi","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_multi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"reconstruct_pattern_multi ‚Äî reconstruct_pattern_multi","text":"novel approach carries pattern reconstruction marked dot patterns described Tscheschel Stoyan (2006) Wiegand Moloney (2014). One particular feature simultaneous consideration marks, accounting correlation reconstruction. marked point pattern (PPP object) must currently structured follows: X-coordinate, Y-coordinate, metric mark (e.g. diameter breast height), nominal mark (e.g. tree species).calculated unit metre [m]. combination mark correlation function pair correlation function used pattern description. Additional summary statistics may considered.Two randomly selected marks chosen iteration, one various actions performed. Changes retained difference observed reconstructed pattern decreases (minimizing energy). method currently suitable homogeneous point patterns. comprehensive description method can found Wudel et al. (2023).","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_multi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"reconstruct_pattern_multi ‚Äî reconstruct_pattern_multi","text":"Kirkpatrick, S., Gelatt, C.D.Jr., Vecchi, M.P., 1983. Optimization simulated annealing. Science 220, 671‚Äì680. <https://doi.org/10.1126/science.220.4598.671> Tscheschel, ., Stoyan, D., 2006. Statistical reconstruction random point patterns. Computational Statistics Data Analysis 51, 859‚Äì871. <https://doi.org/10.1016/j.csda.2005.09.007> Wiegand, T., Moloney, K.., 2014. Handbook spatial point-pattern analysis ecology. Chapman Hall/CRC Press, Boca Raton. ISBN 978-1-4200-8254-8 Wudel, C., Schlicht, R., & Berger, U. (2023). Multi-trait point pattern reconstruction plant ecosystems. Methods Ecology Evolution, 14, 2668‚Äì2679. https://doi.org/10.1111/2041-210X.14206","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/reconstruct_pattern_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"reconstruct_pattern_multi ‚Äî reconstruct_pattern_multi","text":"","code":"if (FALSE) {  # Random example data set xr <- 500 yr <- 1000 N <- 400 y <- runif(N, min = 0, max = yr) x <- runif(N, min = 0, max = xr)  species <- sample(c(\"A\",\"B\"), N, replace = TRUE) diameter <- runif(N, 0.1, 0.4)  random <- data.frame(x = x, y = y, dbh = diameter, species = factor(species))  marked_pattern <- spatstat.geom::as.ppp(random, W = spatstat.geom::owin(c(0, xr), c(0, yr)))  # Reconstruction function reconstruction <- reconstruct_pattern_multi(marked_pattern, n_repetitions = 2, max_steps = 10000) }"},{"path":"https://r-spatialecology.github.io/shar/reference/results_habitat_association.html","id":null,"dir":"Reference","previous_headings":"","what":"results_habitat_association ‚Äî results_habitat_association","title":"results_habitat_association ‚Äî results_habitat_association","text":"Results habitat association","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/results_habitat_association.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"results_habitat_association ‚Äî results_habitat_association","text":"","code":"results_habitat_association(   pattern,   raster,   significance_level = 0.05,   breaks = NULL,   digits = NULL,   verbose = TRUE )"},{"path":"https://r-spatialecology.github.io/shar/reference/results_habitat_association.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"results_habitat_association ‚Äî results_habitat_association","text":"pattern ppp object original point pattern data rd_pat rd_mar object randomized point pattern. raster SpatRaster original discrete habitat data rd_ras object randomized environmental data. significance_level Double significance level. breaks Vector breaks habitat classes. digits Integer digits used rounding. verbose Logical messages printed.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/results_habitat_association.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"results_habitat_association ‚Äî results_habitat_association","text":"data.frame","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/results_habitat_association.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"results_habitat_association ‚Äî results_habitat_association","text":"functions shows significant habitat associations comparing number points within habitat observed data randomized data described Plotkin et al. (2000) Harms et al. (2001). Significant positive associations present observed count habitat certain threshold randomized count, respectively. case SpatRaster contains NA cells, needs reflected observation window point pattern well (.e., point locations possible areas). breaks = NULL (default), habitat labels (breaks) returned. vector breaks provided (order increasing habitat values), breaks included well.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/results_habitat_association.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"results_habitat_association ‚Äî results_habitat_association","text":"Harms, K.E., Condit, R., Hubbell, S.P., Foster, R.B., 2001. Habitat associations trees shrubs 50-ha neotropical forest plot. Journal Ecology 89, 947‚Äì959. <https://doi.org/10.1111/j.1365-2745.2001.00615.x> Plotkin, J.B., Potts, M.D., Leslie, N., Manokaran, N., LaFrankie, J.V., Ashton, P.S., 2000. Species-area curves, spatial aggregation, habitat specialization tropical forests. Journal Theoretical Biology 207, 81‚Äì99. <https://doi.org/10.1006/jtbi.2000.2158>","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/results_habitat_association.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"results_habitat_association ‚Äî results_habitat_association","text":"","code":"landscape_classified <- classify_habitats(terra::rast(landscape), n = 5, style = \"fisher\") species_a_random <- fit_point_process(species_a, n_random = 199) #> Unmarking provided input pattern. #>  > Progress: n_random: 1/199\t\t #>  > Progress: n_random: 2/199\t\t #>  > Progress: n_random: 3/199\t\t #>  > Progress: n_random: 4/199\t\t #>  > Progress: n_random: 5/199\t\t #>  > Progress: n_random: 6/199\t\t #>  > Progress: n_random: 7/199\t\t #>  > Progress: n_random: 8/199\t\t #>  > Progress: n_random: 9/199\t\t #>  > Progress: n_random: 10/199\t\t #>  > Progress: n_random: 11/199\t\t #>  > Progress: n_random: 12/199\t\t #>  > Progress: n_random: 13/199\t\t #>  > Progress: n_random: 14/199\t\t #>  > Progress: n_random: 15/199\t\t #>  > Progress: n_random: 16/199\t\t #>  > Progress: n_random: 17/199\t\t #>  > Progress: n_random: 18/199\t\t #>  > Progress: n_random: 19/199\t\t #>  > Progress: n_random: 20/199\t\t #>  > Progress: n_random: 21/199\t\t #>  > Progress: n_random: 22/199\t\t #>  > Progress: n_random: 23/199\t\t #>  > Progress: n_random: 24/199\t\t #>  > Progress: n_random: 25/199\t\t #>  > Progress: n_random: 26/199\t\t #>  > Progress: n_random: 27/199\t\t #>  > Progress: n_random: 28/199\t\t #>  > Progress: n_random: 29/199\t\t #>  > Progress: n_random: 30/199\t\t #>  > Progress: n_random: 31/199\t\t #>  > Progress: n_random: 32/199\t\t #>  > Progress: n_random: 33/199\t\t #>  > Progress: n_random: 34/199\t\t #>  > Progress: n_random: 35/199\t\t #>  > Progress: n_random: 36/199\t\t #>  > Progress: n_random: 37/199\t\t #>  > Progress: n_random: 38/199\t\t #>  > Progress: n_random: 39/199\t\t #>  > Progress: n_random: 40/199\t\t #>  > Progress: n_random: 41/199\t\t #>  > Progress: n_random: 42/199\t\t #>  > Progress: n_random: 43/199\t\t #>  > Progress: n_random: 44/199\t\t #>  > Progress: n_random: 45/199\t\t #>  > Progress: n_random: 46/199\t\t #>  > Progress: n_random: 47/199\t\t #>  > Progress: n_random: 48/199\t\t #>  > Progress: n_random: 49/199\t\t #>  > Progress: n_random: 50/199\t\t #>  > Progress: n_random: 51/199\t\t #>  > Progress: n_random: 52/199\t\t #>  > Progress: n_random: 53/199\t\t #>  > Progress: n_random: 54/199\t\t #>  > Progress: n_random: 55/199\t\t #>  > Progress: n_random: 56/199\t\t #>  > Progress: n_random: 57/199\t\t #>  > Progress: n_random: 58/199\t\t #>  > Progress: n_random: 59/199\t\t #>  > Progress: n_random: 60/199\t\t #>  > Progress: n_random: 61/199\t\t #>  > Progress: n_random: 62/199\t\t #>  > Progress: n_random: 63/199\t\t #>  > Progress: n_random: 64/199\t\t #>  > Progress: n_random: 65/199\t\t #>  > Progress: n_random: 66/199\t\t #>  > Progress: n_random: 67/199\t\t #>  > Progress: n_random: 68/199\t\t #>  > Progress: n_random: 69/199\t\t #>  > Progress: n_random: 70/199\t\t #>  > Progress: n_random: 71/199\t\t #>  > Progress: n_random: 72/199\t\t #>  > Progress: n_random: 73/199\t\t #>  > Progress: n_random: 74/199\t\t #>  > Progress: n_random: 75/199\t\t #>  > Progress: n_random: 76/199\t\t #>  > Progress: n_random: 77/199\t\t #>  > Progress: n_random: 78/199\t\t #>  > Progress: n_random: 79/199\t\t #>  > Progress: n_random: 80/199\t\t #>  > Progress: n_random: 81/199\t\t #>  > Progress: n_random: 82/199\t\t #>  > Progress: n_random: 83/199\t\t #>  > Progress: n_random: 84/199\t\t #>  > Progress: n_random: 85/199\t\t #>  > Progress: n_random: 86/199\t\t #>  > Progress: n_random: 87/199\t\t #>  > Progress: n_random: 88/199\t\t #>  > Progress: n_random: 89/199\t\t #>  > Progress: n_random: 90/199\t\t #>  > Progress: n_random: 91/199\t\t #>  > Progress: n_random: 92/199\t\t #>  > Progress: n_random: 93/199\t\t #>  > Progress: n_random: 94/199\t\t #>  > Progress: n_random: 95/199\t\t #>  > Progress: n_random: 96/199\t\t #>  > Progress: n_random: 97/199\t\t #>  > Progress: n_random: 98/199\t\t #>  > Progress: n_random: 99/199\t\t #>  > Progress: n_random: 100/199\t\t #>  > Progress: n_random: 101/199\t\t #>  > Progress: n_random: 102/199\t\t #>  > Progress: n_random: 103/199\t\t #>  > Progress: n_random: 104/199\t\t #>  > Progress: n_random: 105/199\t\t #>  > Progress: n_random: 106/199\t\t #>  > Progress: n_random: 107/199\t\t #>  > Progress: n_random: 108/199\t\t #>  > Progress: n_random: 109/199\t\t #>  > Progress: n_random: 110/199\t\t #>  > Progress: n_random: 111/199\t\t #>  > Progress: n_random: 112/199\t\t #>  > Progress: n_random: 113/199\t\t #>  > Progress: n_random: 114/199\t\t #>  > Progress: n_random: 115/199\t\t #>  > Progress: n_random: 116/199\t\t #>  > Progress: n_random: 117/199\t\t #>  > Progress: n_random: 118/199\t\t #>  > Progress: n_random: 119/199\t\t #>  > Progress: n_random: 120/199\t\t #>  > Progress: n_random: 121/199\t\t #>  > Progress: n_random: 122/199\t\t #>  > Progress: n_random: 123/199\t\t #>  > Progress: n_random: 124/199\t\t #>  > Progress: n_random: 125/199\t\t #>  > Progress: n_random: 126/199\t\t #>  > Progress: n_random: 127/199\t\t #>  > Progress: n_random: 128/199\t\t #>  > Progress: n_random: 129/199\t\t #>  > Progress: n_random: 130/199\t\t #>  > Progress: n_random: 131/199\t\t #>  > Progress: n_random: 132/199\t\t #>  > Progress: n_random: 133/199\t\t #>  > Progress: n_random: 134/199\t\t #>  > Progress: n_random: 135/199\t\t #>  > Progress: n_random: 136/199\t\t #>  > Progress: n_random: 137/199\t\t #>  > Progress: n_random: 138/199\t\t #>  > Progress: n_random: 139/199\t\t #>  > Progress: n_random: 140/199\t\t #>  > Progress: n_random: 141/199\t\t #>  > Progress: n_random: 142/199\t\t #>  > Progress: n_random: 143/199\t\t #>  > Progress: n_random: 144/199\t\t #>  > Progress: n_random: 145/199\t\t #>  > Progress: n_random: 146/199\t\t #>  > Progress: n_random: 147/199\t\t #>  > Progress: n_random: 148/199\t\t #>  > Progress: n_random: 149/199\t\t #>  > Progress: n_random: 150/199\t\t #>  > Progress: n_random: 151/199\t\t #>  > Progress: n_random: 152/199\t\t #>  > Progress: n_random: 153/199\t\t #>  > Progress: n_random: 154/199\t\t #>  > Progress: n_random: 155/199\t\t #>  > Progress: n_random: 156/199\t\t #>  > Progress: n_random: 157/199\t\t #>  > Progress: n_random: 158/199\t\t #>  > Progress: n_random: 159/199\t\t #>  > Progress: n_random: 160/199\t\t #>  > Progress: n_random: 161/199\t\t #>  > Progress: n_random: 162/199\t\t #>  > Progress: n_random: 163/199\t\t #>  > Progress: n_random: 164/199\t\t #>  > Progress: n_random: 165/199\t\t #>  > Progress: n_random: 166/199\t\t #>  > Progress: n_random: 167/199\t\t #>  > Progress: n_random: 168/199\t\t #>  > Progress: n_random: 169/199\t\t #>  > Progress: n_random: 170/199\t\t #>  > Progress: n_random: 171/199\t\t #>  > Progress: n_random: 172/199\t\t #>  > Progress: n_random: 173/199\t\t #>  > Progress: n_random: 174/199\t\t #>  > Progress: n_random: 175/199\t\t #>  > Progress: n_random: 176/199\t\t #>  > Progress: n_random: 177/199\t\t #>  > Progress: n_random: 178/199\t\t #>  > Progress: n_random: 179/199\t\t #>  > Progress: n_random: 180/199\t\t #>  > Progress: n_random: 181/199\t\t #>  > Progress: n_random: 182/199\t\t #>  > Progress: n_random: 183/199\t\t #>  > Progress: n_random: 184/199\t\t #>  > Progress: n_random: 185/199\t\t #>  > Progress: n_random: 186/199\t\t #>  > Progress: n_random: 187/199\t\t #>  > Progress: n_random: 188/199\t\t #>  > Progress: n_random: 189/199\t\t #>  > Progress: n_random: 190/199\t\t #>  > Progress: n_random: 191/199\t\t #>  > Progress: n_random: 192/199\t\t #>  > Progress: n_random: 193/199\t\t #>  > Progress: n_random: 194/199\t\t #>  > Progress: n_random: 195/199\t\t #>  > Progress: n_random: 196/199\t\t #>  > Progress: n_random: 197/199\t\t #>  > Progress: n_random: 198/199\t\t #>  > Progress: n_random: 199/199\t\t #>  results_habitat_association(pattern = species_a_random, raster = landscape_classified) #> > Input: randomized pattern #> > Quantile thresholds: negative < 0.025 || positive > 0.975 #>   habitat breaks count    lo    hi significance #> 1       1     NA    35 11.00 28.00     positive #> 2       2     NA    44 25.00 45.05         n.s. #> 3       3     NA    36 22.95 41.05         n.s. #> 4       4     NA     4 28.00 51.00     negative #> 5       5     NA    73 52.90 80.00         n.s."},{"path":"https://r-spatialecology.github.io/shar/reference/sample_randomized.html","id":null,"dir":"Reference","previous_headings":"","what":"sample_randomized ‚Äî sample_randomized","title":"sample_randomized ‚Äî sample_randomized","text":"Sample randomized list","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/sample_randomized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sample_randomized ‚Äî sample_randomized","text":"","code":"sample_randomized(randomized, n = NULL, verbose = TRUE)"},{"path":"https://r-spatialecology.github.io/shar/reference/sample_randomized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sample_randomized ‚Äî sample_randomized","text":"randomized List randomized raster patterns. n Integer number vector ids randomized pattern plot. verbose Logical progress report printed.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/sample_randomized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sample_randomized ‚Äî sample_randomized","text":"list","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/sample_randomized.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sample_randomized ‚Äî sample_randomized","text":"Get list n randomized raster patterns. n single number, n randomized elements sampledt. n vector, corresponding elements returned.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/sample_randomized.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sample_randomized ‚Äî sample_randomized","text":"","code":"if (FALSE) { sample_randomized(randomized = reconstruction$randomized, n = c(5, 10, 15)) }"},{"path":"https://r-spatialecology.github.io/shar/reference/select_kernel.html","id":null,"dir":"Reference","previous_headings":"","what":"select_kernel ‚Äî select_kernel","title":"select_kernel ‚Äî select_kernel","text":"Kernel selection","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/select_kernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"select_kernel ‚Äî select_kernel","text":"","code":"select_kernel(kernel_arg, bw, rmax, divisor)"},{"path":"https://r-spatialecology.github.io/shar/reference/select_kernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"select_kernel ‚Äî select_kernel","text":"kernel_arg Parameter function reconstruct_pattern_multi_trait_marks, specifies kernel used calculate energy, possible kernels can : Gaussian, Epanechnikov, Rectangular, Cumulative. bw Bandwidth kernels scaled, standard deviation smoothing kernel. rmax Maximum distance summary statistics evaluated. divisor Divisor smoothing kernel, d r.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/select_kernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"select_kernel ‚Äî select_kernel","text":"list","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/select_kernel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"select_kernel ‚Äî select_kernel","text":"Returns function selected kernel, used calculate kernel.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/shar.html","id":null,"dir":"Reference","previous_headings":"","what":"Package description ‚Äî shar","title":"Package description ‚Äî shar","text":"Analyse species-habitat associations R. Therefore, information location species needed environmental conditions. test significance habitat associations, one two components randomized. Methods mainly based Plotkin et al. (2000) <doi:10.1006/jtbi.2000.2158> Harms et al. (2001) <doi:10.1111/j.1365-2745.2001.00615.x>.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/shar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Package description ‚Äî shar","text":"Maintainer: Maximilian H.K. Hesselbarth mhk.hesselbarth@gmail.com (ORCID) Authors: Marco Sciaini marco.sciaini@posteo.net (ORCID) Chris Wudel chris.wudel@tu-dresden.de (ORCID) contributors: Zeke Marshall ee18zm@leeds.ac.uk (ORCID) [contributor] Thomas Etherington teth001@aucklanduni.ac.nz (ORCID) [contributor] Janosch Heinermann janosch.heinermann@tu-dresden.de (ORCID) [contributor]","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/species_a.html","id":null,"dir":"Reference","previous_headings":"","what":"Species a ‚Äî species_a","title":"Species a ‚Äî species_a","text":"species negative associations habitat 4 landscape. Please aware negative association one habitat inevitable lead positive associations habitats (Yamada et al. 2006).","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/species_a.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species a ‚Äî species_a","text":"","code":"species_a"},{"path":"https://r-spatialecology.github.io/shar/reference/species_a.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species a ‚Äî species_a","text":"spatstat ppp object.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/species_a.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Species a ‚Äî species_a","text":"Yamada, T., Tomita, ., Itoh, ., Yamakura, T., Ohkubo, T., Kanzaki, M., Tan, S., Ashton, P.S., 2006. Habitat associations Sterculiaceae trees Bornean rain forest plot. Journal Vegetation Science 17, 559‚Äì566.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/species_b.html","id":null,"dir":"Reference","previous_headings":"","what":"Species b ‚Äî species_b","title":"Species b ‚Äî species_b","text":"species positive associations habitat 5 landscape. Please aware positive association one habitat inevitable lead negative associations habitats (Yamada et al. 2006)","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/species_b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species b ‚Äî species_b","text":"","code":"species_b"},{"path":"https://r-spatialecology.github.io/shar/reference/species_b.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species b ‚Äî species_b","text":"spatstat ppp object.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/species_b.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Species b ‚Äî species_b","text":"Yamada, T., Tomita, ., Itoh, ., Yamakura, T., Ohkubo, T., Kanzaki, M., Tan, S., Ashton, P.S., 2006. Habitat associations Sterculiaceae trees Bornean rain forest plot. Journal Vegetation Science 17, 559‚Äì566.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/to_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"dummy_transf ‚Äî to_dummy","title":"dummy_transf ‚Äî to_dummy","text":"Tranfsorm dummy variables","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/to_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dummy_transf ‚Äî to_dummy","text":"","code":"to_dummy(f)"},{"path":"https://r-spatialecology.github.io/shar/reference/to_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dummy_transf ‚Äî to_dummy","text":"f Result calc_moments_full function represents product-moment contribution point coordinates x, y marks, whole point pattern.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/to_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dummy_transf ‚Äî to_dummy","text":"matrix","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/to_dummy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dummy_transf ‚Äî to_dummy","text":"Function transformation variables dummy variables back","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/translate_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"translate_raster ‚Äî translate_raster","title":"translate_raster ‚Äî translate_raster","text":"Torus translation","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/translate_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"translate_raster ‚Äî translate_raster","text":"","code":"translate_raster(   raster,   steps_x = NULL,   steps_y = NULL,   return_input = TRUE,   simplify = FALSE,   verbose = TRUE )"},{"path":"https://r-spatialecology.github.io/shar/reference/translate_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"translate_raster ‚Äî translate_raster","text":"raster SpatRaster discrete habitat classes. steps_x, steps_y Integer number steps (cells) raster translated corresponding direction. null, possible combinations used resulting n = ((50 + 1) * (50 + 1)) - 4 rasters. return_input Logical original input data returned. simplify Logical raster returned n_random = 1 return_input = FALSE. verbose Logical progress report printed.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/translate_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"translate_raster ‚Äî translate_raster","text":"rd_ras","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/translate_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"translate_raster ‚Äî translate_raster","text":"Torus translation test described Harms et al. (2001). raster shifted four cardinal directions steps equal raster resolution. cell exits extent one side, enters extent opposite side. method allow NA values present SpatRaster.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/translate_raster.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"translate_raster ‚Äî translate_raster","text":"Harms, K.E., Condit, R., Hubbell, S.P., Foster, R.B., 2001. Habitat associations trees shrubs 50-ha neotropical forest plot. Journal Ecology 89, 947‚Äì959. <https://doi.org/10.1111/j.1365-2745.2001.00615.x>","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/translate_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"translate_raster ‚Äî translate_raster","text":"","code":"if (FALSE) { landscape_classified <- classify_habitats(terra::rast(landscape), n = 5, style = \"fisher\")  landscape_random <- translate_raster(landscape_classified) landscape_random_sub <- translate_raster(landscape_classified, steps_x = 1:10, steps_y = 1:5) }"},{"path":"https://r-spatialecology.github.io/shar/reference/unpack_randomized.html","id":null,"dir":"Reference","previous_headings":"","what":"unpack_randomized ‚Äî unpack_randomized","title":"unpack_randomized ‚Äî unpack_randomized","text":"Load randomized raster object","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/unpack_randomized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"unpack_randomized ‚Äî unpack_randomized","text":"","code":"unpack_randomized(raster)"},{"path":"https://r-spatialecology.github.io/shar/reference/unpack_randomized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"unpack_randomized ‚Äî unpack_randomized","text":"raster rd_ras object randomized raster.","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/unpack_randomized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"unpack_randomized ‚Äî unpack_randomized","text":"rd_ras","code":""},{"path":"https://r-spatialecology.github.io/shar/reference/unpack_randomized.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"unpack_randomized ‚Äî unpack_randomized","text":"SpatRaster saved (need packed), function allows unpack previously packed raster objects saved using pack_randomized. details, see wrap.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/shar/reference/unpack_randomized.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"unpack_randomized ‚Äî unpack_randomized","text":"","code":"if (FALSE) { landscape_classified <- classify_habitats(terra::rast(landscape), n = 5, style = \"fisher\") landscape_random <- randomize_raster(landscape_classified, n_random = 3) x <- pack_randomized(raster = landscape_random) y <- unpack_randomized(raster = y) }"},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-23","dir":"Changelog","previous_headings":"","what":"shar 2.3","title":"shar 2.3","text":"Option return fitted parameters fit_point_process Using NA instead ‚ÄúNA‚Äù Iterations stopping criterion vectors instead list reconstruct_algorithm","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-221","dir":"Changelog","previous_headings":"","what":"shar 2.2.1","title":"shar 2.2.1","text":"CRAN release: 2024-01-09 Simplify roxygen2 docs","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-22","dir":"Changelog","previous_headings":"","what":"shar 2.2","title":"shar 2.2","text":"CRAN release: 2023-12-21 Added new function reconstruct_pattern_multi() including several internal functions methods","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-211","dir":"Changelog","previous_headings":"","what":"shar 2.1.1","title":"shar 2.1.1","text":"CRAN release: 2023-10-23 Bugfixes (thanks @baddstats)","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-21","dir":"Changelog","previous_headings":"","what":"shar 2.1","title":"shar 2.1","text":"CRAN release: 2023-10-02 Remove comp_fast argument Speed improvements computation General updates code structure Removed n_points window argument reconstruction due methodological issues Bugfix related wrap/unwrap raster printing","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-204","dir":"Changelog","previous_headings":"","what":"shar 2.0.4","title":"shar 2.0.4","text":"CRAN release: 2023-08-29 Remove Sys.sleep verbose reconstruction","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-203","dir":"Changelog","previous_headings":"","what":"shar 2.0.3","title":"shar 2.0.3","text":"CRAN release: 2023-03-13 Allow fixed max r distance pattern reconstruction","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-202","dir":"Changelog","previous_headings":"","what":"shar 2.0.2","title":"shar 2.0.2","text":"CRAN release: 2022-11-16 Update spatstat dependency","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-201","dir":"Changelog","previous_headings":"","what":"shar 2.0.1","title":"shar 2.0.1","text":"CRAN release: 2022-11-01 Better approach external repo Fixing typo maintainer name","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-200","dir":"Changelog","previous_headings":"","what":"shar 2.0.0","title":"shar 2.0.0","text":"CRAN release: 2022-09-21 Using terra instead raster Naming raster values ‚Äúlayer‚Äù Adding pack_randomized() unpack_randomized() due terra saving behavior","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-132","dir":"Changelog","previous_headings":"","what":"shar 1.3.2","title":"shar 1.3.2","text":"CRAN release: 2022-03-08 Improvement classify_habitats() variable Adding breaks argument results_habitat_association() Adding classint_to_vector() helper function Include new spatstat package structure","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-131","dir":"Changelog","previous_headings":"","what":"shar 1.3.1","title":"shar 1.3.1","text":"CRAN release: 2022-01-04 Bugfix plot.rd_pat() plot.rd_mar() Adding internal sample_randomized() function used plotting","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-13","dir":"Changelog","previous_headings":"","what":"shar 1.3","title":"shar 1.3","text":"CRAN release: 2021-12-06 Better documentation Combine reconstruct_pattern_homo(), reconstruct_pattern_cluster(), reconstruct_pattern_hetero() reconstruct_pattern() Replaced plot_randomized_*() function generic plot() methods Adding warnings errors NA values present list_to_randomized() function Parallelization article Adding JOSS paper reference","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-121","dir":"Changelog","previous_headings":"","what":"shar 1.2.1","title":"shar 1.2.1","text":"CRAN release: 2021-05-04 reconstruct_pattern_homo() arguments specify number points window reconstruct_pattern_marks() allows different number points pattern marked_pattern argument","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-12","dir":"Changelog","previous_headings":"","what":"shar 1.2","title":"shar 1.2","text":"CRAN release: 2021-03-15 Include new spatstat package structure Use GPL3 License","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-111","dir":"Changelog","previous_headings":"","what":"shar 1.1.1","title":"shar 1.1.1","text":"Add logo Update MIT License renamed master main branch","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-11","dir":"Changelog","previous_headings":"","what":"shar 1.1","title":"shar 1.1","text":"CRAN release: 2019-11-15 Use energy_df get energy printing available Updated tests stable progress printing","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-101","dir":"Changelog","previous_headings":"","what":"shar 1.0.1","title":"shar 1.0.1","text":"CRAN release: 2019-09-10 calculation energy printing (slow)","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-10","dir":"Changelog","previous_headings":"","what":"shar 1.0","title":"shar 1.0","text":"CRAN release: 2019-08-08 Printing methods objects Possibility specify intervals r reconstruction functions plot_energy() plot energy iterations reconstructed patterns reconstruct_pattern_hetero() allows reconstruct heterogeneous patterns reconstruct_pattern() split three functions: reconstruct_pattern_homo(), reconstruct_pattern_hetero(), reconstruct_pattern_cluster(), reconstruct_marks() now called reconstruct_pattern_marks()","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-05","dir":"Changelog","previous_headings":"","what":"shar 0.5","title":"shar 0.5","text":"CRAN release: 2019-07-09 Annealing probability can specified reconstruction","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-04","dir":"Changelog","previous_headings":"","what":"shar 0.4","title":"shar 0.4","text":"CRAN release: 2019-05-27 Easier user experience classes used specify provided input results_habitat_associations() checks extent inputs identical reconstruct_marks() calculate_energy() use now weights summary functions Bug calculate_energy() reconstructed marks","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-031","dir":"Changelog","previous_headings":"","what":"shar 0.3.1","title":"shar 0.3.1","text":"CRAN release: 2019-04-23 Better structure vignettes Adding CONTRIBUTING.md Trying fix failing tests older R versions New functionality Allowing translate raster n steps","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-03","dir":"Changelog","previous_headings":"","what":"shar 0.3","title":"shar 0.3","text":"CRAN release: 2019-03-25 plot_randomized_pattern() now uses envelopes plot randomized summary functions plot_randomized_pattern() includes quantum bar plot_randomized_pattern() now can return plots (Press ) calculate_engery() can also calculate energy marked reconstructions Improved warning messages Explicitly C++11 compiler plot_randomized_pattern() plot randomized rasters","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-021","dir":"Changelog","previous_headings":"","what":"shar 0.2.1","title":"shar 0.2.1","text":"starting pattern now identical n_random relocation process differs randomization summary functions calculated 250 steps 0 rmax Bugfixes rcpp_sample() faster Rcpp implementation sample()","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-02","dir":"Changelog","previous_headings":"","what":"shar 0.2","title":"shar 0.2","text":"CRAN release: 2019-02-06 Replaced cat() message() printing console defaults set n_random = 1 comp_fast argument equals TRUE number points exceed threshold reconstruct_pattern() stops energy decrease n iterations reconstruct_marks() stops energy decrease n iterations plot_randomized_pattern() can also plot point patterns Bug fit_point_process() points present removed simulated pattern Bug reconstruct_pattern() points present removed simulated pattern","code":""},{"path":"https://r-spatialecology.github.io/shar/news/index.html","id":"shar-01","dir":"Changelog","previous_headings":"","what":"shar 0.1","title":"shar 0.1","text":"CRAN release: 2019-01-27 First submission CRAN","code":""}]
